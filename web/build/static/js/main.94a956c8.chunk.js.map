{"version":3,"sources":["assets sync /^/.//social_.*/.svg$","assets/social_facebook.svg","assets/social_instagram.svg","assets/social_twitter.svg","definitions.js","components/SubmitBody.js","components/CampCard.js","components/DirectoryBody.js","components/PrivacyBody.js","App.js","serviceWorker.js","index.js","../../shared/index.js","assets/social_www.svg","assets/social_email.svg","assets/header_logo.jpg"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","defaultYear","Date","getFullYear","campIdentifications","require","streets","crossStreets","SubmitBody","props","submitHandler","event","a","key","preventDefault","setState","_validated","camp","year","state","startsWith","trim","fieldsToValidate","joinOpen","push","x","fieldValidator","tokenId","console","log","JSON","stringify","axios","post","error","response","value","err","fieldError","document","getElementById","setCustomValidity","fileUploader","target","files","length","thumbnail","_thumbnail_object_url","_thumbnail_user_filename","actualFile","ext","type","fileName","name","get","uploader","reader","FileReader","onload","image","result","binary","atob","split","array","i","charCodeAt","blobData","Blob","Uint8Array","data","contentType","put","url","headers","onUploadProgress","pe","_upload_progress","lengthComputable","Math","floor","loaded","total","URL","createObjectURL","readAsDataURL","request","changeHandler","y","splitname","checked","xx","identifies","about","location","frontage","intersection","facebook","email","twitter","instagram","joinMessage","joinUrl","_error_name","_error_about","_error_url","_error_facebook","_error_email","_error_twitter","_error_instagram","_error_joinMessage","_error_joinUrl","this","loggedin","Container","Row","Col","style","marginTop","marginBottom","Form","noValidate","validated","onSubmit","xs","Group","controlId","Label","Control","placeholder","onChange","Feedback","Text","className","as","s","rows","InputGroup","Prepend","File","label","custom","accept","ProgressBar","striped","now","Image","src","fluid","Button","variant","onClick","Check","React","Component","JoinButton","popover","Popover","Title","Content","href","OverlayTrigger","trigger","placement","overlay","size","marginLeft","DisplayURL","strippedURL","replace","width","paddingRight","DisplayEmail","CampCard","Card","bg","Img","Header","fontSize","fontWeight","Body","Subtitle","string","DirectoryBody","filter","filterButtonString","to","DropdownButton","ButtonGroup","title","Dropdown","Item","CardColumns","onecamp","role","PrivacyBody","render","noUser","username","user_image","googleId","googleLoginSuccess","newState","profileObj","imageUrl","onUserChange","googleLoginFailure","googleLogout","Navbar","Brand","Nav","Link","NavDropdown","clientId","buttonText","onSuccess","onFailure","cookiePolicy","isSignedIn","roundedCircle","maxHeight","onLogoutSuccess","logo","alt","Directory","Submit","userChange","newUserState","Boolean","window","hostname","match","ReactDOM","exact","path","component","params","navigator","serviceWorker","ready","then","registration","unregister","catch","message","includes","validateURL","isFacebookURL","validateEmail","test","tester","account","address","some","part","_","protocol","campErrors","errors","f","field","locationToString"],"mappings":"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","file":"static/js/main.94a956c8.chunk.js","sourcesContent":["var map = {\n\t\"./social_email.svg\": 84,\n\t\"./social_facebook.svg\": 128,\n\t\"./social_instagram.svg\": 129,\n\t\"./social_twitter.svg\": 130,\n\t\"./social_www.svg\": 83\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 127;","module.exports = __webpack_public_path__ + \"static/media/social_facebook.51d5c4a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/social_instagram.76090faf.svg\";","module.exports = __webpack_public_path__ + \"static/media/social_twitter.abfbd4d9.svg\";","export const defaultYear = new Date().getFullYear();\n\n// TODO delete testData\nexport const testData = [\n  {\n    updated: \"2020-05-21T23:14:25.597Z\",\n    identifies: \"Trans / GNC / Non-binary\",\n    created: \"2020-05-21T21:26:46.726Z\",\n    year: 2019,\n    placed: \"yes\",\n    name: \"Camp Gender Blenders\",\n    url: \"https://genderblenders.org\",\n    facebook: \"https://www.facebook.com/groups/genderblender/\",\n    email: \"info@genderblenders.org\",\n    location: {\n      string: \"D & 7:45\",\n      frontage: \"D\",\n      intersection: \"7:45\",\n      intersection_type: \"&\",\n    },\n    about:\n      \"Gender Blender is a community committed to creating safe, awesome, fun, creative spaces for trans, gender queer, gender variant, gender nonconforming, queens, kings, and those of us that are shape shifting the gender binary.\",\n    image: \"GenderBlenders.jpg\",\n  },\n  {\n    updated: \"2020-05-21T23:13:10.176Z\",\n    since: 2001,\n    identifies: \"LGBTQ\",\n    created: \"2020-05-21T00:19:24.076Z\",\n    year: 2019,\n    placed: \"yes\",\n    name: \"Astropups\",\n    facebook: \"https://facebook.com/groups/astropupspublic/\",\n    location: {\n      string: \"D & 4:15\",\n      frontage: \"D\",\n      intersection: \"4:15\",\n      intersection_type: \"&\",\n    },\n    about:\n      \"Since 2001, the Astropups have been known for providing a cool (and furry) oasis on the playa where countless queer (and queer-friendly) Burners have crossed paths and met new friends.\",\n    image: \"Astropups.jpg\",\n  },\n  {\n    updated: \"2020-05-21T23:13:10.176Z\",\n    identifies: \"LGBTQ\",\n    created: \"2020-05-21T00:19:24.076Z\",\n    year: 2019,\n    placed: \"yes\",\n    name: \"BAAAHS\",\n    url: \"http://www.baaahs.org/\",\n    email: \"info@baaahs.org\",\n    facebook: \"https://www.facebook.com/groups/baaahs/\",\n    location: {\n      string: \"4:30 & D\",\n      frontage: \"4:30\",\n      intersection: \"D\",\n      intersection_type: \"&\",\n    },\n    about: \"Big-ass amazingly awesome homosexual sheep\",\n    image: \"BAAAHS.jpg\",\n    join: {\n      open: true,\n      message:\n        \"We are always excited to welcome new BAAAHS campers. If you are interested in joining BAAAHS, attend some of our events, listed on the Facebook page.\",\n    },\n  },\n  {\n    updated: \"2020-05-21T23:13:10.176Z\",\n    identifies: \"LGBTQ\",\n    created: \"2020-05-21T00:19:24.076Z\",\n    year: 2019,\n    placed: \"yes\",\n    name: \"Bad Asstronauts\",\n    facebook: \"https://www.facebook.com/badasstronauts/\",\n    location: {\n      string: \"7:30 & E\",\n      frontage: \"7:30\",\n      intersection: \"E\",\n      intersection_type: \"&\",\n    },\n    about:\n      \"We are the Bad Asstronauts, a group of Denver-based friends who also travel to Burning Man, Apo & beyond.\",\n    image: \"BadAsstronauts.jpg\",\n  },\n  {\n    updated: \"2020-05-21T23:13:10.176Z\",\n    identifies: \"Gay / Male Identified\",\n    created: \"2020-05-21T00:19:24.076Z\",\n    year: 2019,\n    placed: \"yes\",\n    name: \"Future Turtles\",\n    url: \"https://futureturtles.com/\",\n    email: \"joel@spolsky.com\",\n    facebook: \"https://facebook.com/futureturtle\",\n    instagram: \"https://www.instagram.com/futureturtles/\",\n    location: {\n      string: \"E & 4:15\",\n      frontage: \"E\",\n      intersection: \"4:15\",\n      intersection_type: \"&\",\n    },\n    about:\n      \"The Future Turtles are a disorganized bunch of friends camping together at Burning Man since 2018 without any drama, death, or injury.\",\n    image: \"FutureTurtles.jpg\",\n  },\n  {\n    updated: \"2020-05-21T23:13:10.176Z\",\n    identifies: \"LGBTQ\",\n    created: \"2020-05-21T00:19:24.076Z\",\n    year: 2019,\n    placed: \"yes\",\n    name: \"Paradise Motel\",\n    url: \"https://www.paradisemotel.camp/\",\n    email: \" contact@paradisemotel.camp\",\n    facebook: \"https://www.facebook.com/groups/paradisemotel\",\n    location: {\n      string: \"8:00 & D\",\n      frontage: \"8:00\",\n      intersection: \"D\",\n      intersection_type: \"&\",\n    },\n    about:\n      'We\\'re a flamboyance of fun-loving goofballs from mainly the Bay Area (and all across the gender and sexuality spectra) who invite weary travelers to stop in for a snow cone and enjoy featured music and activities every day while lounging in the shade by our \"pool\".',\n    image: \"ParadiseMotel.jpg\",\n  },\n];\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport Image from \"react-bootstrap/Image\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\n\nimport { defaultYear } from \"../definitions.js\";\nimport { fieldError } from \"shared\";\n\nimport axios from \"axios\";\n\nconst campIdentifications = [...require(\"shared\").campIdentifications];\nconst streets = [...require(\"shared\").streets];\nconst crossStreets = require(\"shared\").crossStreets;\n\nexport default class SubmitBody extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // The state object is just a standard\n      // camp directory object, which can be submitted to the\n      // API and stored in the database.\n      name: \"\",\n      identifies: campIdentifications[0],\n      about: \"\",\n      location: {\n        frontage: streets[0],\n        intersection: streets[0],\n      },\n      url: \"\",\n      facebook: \"\",\n      email: \"\",\n      twitter: \"\",\n      instagram: \"\",\n      thumbnail: \"\",\n      joinOpen: false,\n      joinMessage: \"\",\n      joinUrl: \"\",\n\n      // state keys starting with '_' are Component state\n      // and form metadata which will never be submitted to the API\n      _validated: false,\n      _error_name: null,\n      _error_about: null,\n      _error_url: null,\n      _error_facebook: null,\n      _error_email: null,\n      _error_twitter: null,\n      _error_instagram: null,\n      _error_joinMessage: null,\n      _error_joinUrl: null,\n      _upload_progress: null,\n      _thumbnail_user_filename: \"\",\n    };\n  }\n\n  submitHandler = async (event) => {\n    event.preventDefault();\n    this.setState({ _validated: true });\n\n    var camp = {\n      year: defaultYear,\n    };\n    for (var key in this.state) {\n      if (!key.startsWith(\"_\")) {\n        camp[key] = this.state[key];\n        if (typeof camp[key] === \"string\") {\n          camp[key] = camp[key].trim();\n        }\n      }\n    }\n\n    var fieldsToValidate = [\n      \"name\",\n      \"about\",\n      \"url\",\n      \"facebook\",\n      \"email\",\n      \"twitter\",\n      \"instagram\",\n    ];\n    if (this.state.joinOpen) {\n      fieldsToValidate.push(\"joinMessage\", \"joinUrl\");\n    }\n\n    for (var x of fieldsToValidate) {\n      if (!this.fieldValidator(x, camp[x])) {\n        return null;\n      }\n    }\n\n    camp.tokenId = this.props.tokenId;\n\n    console.log(\"submitting\");\n    console.log(JSON.stringify(camp));\n\n    // TODO if the API returns an error the user never finds out?\n    // in fact the console just has a mess, too.\n\n    // TODO if the API returns success we should redirect to some kind of success page?\n\n    try {\n      // TODO this URL should be in one place\n      await axios.post(\n        \"https://l374cc62kc.execute-api.us-east-2.amazonaws.com/Prod/camps\",\n        camp\n      );\n    } catch (error) {\n      console.error(error);\n      console.error(error.response);\n    }\n  };\n\n  fieldValidator = (key, value) => {\n    const err = fieldError(key, value);\n\n    this.setState({ [\"_error_\" + key]: err });\n    document.getElementById(key).setCustomValidity(err);\n    return err === \"\";\n  };\n\n  fileUploader = async (event) => {\n    if (event.target.files.length === 0) {\n      // no picture.\n      this.setState({\n        thumbnail: \"\",\n        _thumbnail_object_url: null,\n        _thumbnail_user_filename: \"\",\n      });\n      return;\n    }\n\n    const actualFile = event.target.files[0];\n    let ext = \"\";\n\n    if (actualFile.type === \"image/jpeg\" || actualFile.type === \"image/jpg\") {\n      ext = \"jpg\";\n    } else if (actualFile.type === \"image/png\") {\n      ext = \"png\";\n    } else {\n      // TODO ERROR MESSAGE PLZ\n      this.setState({\n        thumbnail: \"\",\n        _thumbnail_object_url: null,\n        _thumbnail_user_filename: \"\",\n      });\n      return;\n    }\n\n    const fileName = event.target.files[0].name;\n    this.setState({\n      _thumbnail_user_filename: fileName,\n    });\n\n    try {\n      const uploader = await axios.get(\n        `https://l374cc62kc.execute-api.us-east-2.amazonaws.com/Prod/camps/pictureuploadurl/${ext}`\n      );\n\n      let image;\n      let reader = new FileReader();\n      reader.onload = async (e) => {\n        image = e.target.result;\n\n        let binary = atob(image.split(\",\")[1]);\n        let array = [];\n        for (var i = 0; i < binary.length; i++) {\n          array.push(binary.charCodeAt(i));\n        }\n        let blobData = new Blob([new Uint8Array(array)], {\n          type: uploader.data.contentType,\n        });\n\n        await axios.put(uploader.data.url, blobData, {\n          headers: {\n            \"Content-Type\": uploader.data.contentType,\n          },\n          onUploadProgress: (pe) => {\n            this.setState({\n              _upload_progress: pe.lengthComputable\n                ? Math.floor((pe.loaded * 100) / pe.total)\n                : null,\n            });\n          },\n        });\n\n        this.setState({\n          _thumbnail_object_url: URL.createObjectURL(actualFile),\n          thumbnail: uploader.data.fileName,\n          _upload_progress: null,\n        });\n      };\n\n      reader.readAsDataURL(actualFile);\n    } catch (error) {\n      console.error(error);\n      console.error(error.response.request.response);\n    }\n\n    // TODO throw away files when the user never submits the form, or general s3 garbage collection\n    // TODO consider s3 based thumbnailing - reduce size of images to, I think, 318 pixels wide. (but maybe more for retina?)\n    //           here is how ---> https://docs.aws.amazon.com/lambda/latest/dg/with-s3-example.html\n  };\n\n  changeHandler = (event) => {\n    // if the name of the form control is a single\n    // word like \"identifies\", this does a normal, simple\n    // setState to update the JSON state.\n\n    // if it is composite, like \"location.frontage\", it\n    // only changes location.frontage while preserving\n    // the other sub-fields of location.\n\n    // this allows up to two levels of hierarchy in the\n    // object.\n\n    const splitname = event.target.name.split(\".\");\n    const x = splitname[0];\n    let y;\n    switch (event.target.type) {\n      case \"checkbox\":\n        y = event.target.checked;\n        break;\n      default:\n        y = event.target.value;\n    }\n\n    if (splitname.length === 1) {\n      this.setState((state, props) => {\n        return {\n          [x]: y,\n        };\n      });\n    } else if (splitname.length === 2) {\n      const xx = splitname[1];\n      this.setState((state, props) => {\n        return {\n          [x]: {\n            ...state[x],\n            [xx]: y,\n          },\n        };\n      });\n    }\n\n    if (x === \"location\") {\n      if (splitname[1] === \"frontage\") {\n        // constrain intersections to valid cross streets\n      }\n    }\n\n    this.fieldValidator(event.target.name, y);\n  };\n\n  render() {\n    let result = \"\";\n\n    if (!this.props.loggedin) {\n      result = (\n        <Container>\n          <Row>\n            <Col style={{ marginTop: \"2rem\", marginBottom: \"1rem\" }}>\n              <h2>Submit your camp to the Queer Burners directory!</h2>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <p>\n                Welcome! We're building a comprehensive list of queer and ally\n                theme camps that will participate in Burning Man in{\" \"}\n                {defaultYear}.\n              </p>\n\n              <p>\n                To add your theme camp to this directory, please start by\n                logging in using a Google Account.\n              </p>\n              <p>\n                We will use the email address associated with your Google\n                Account to contact you in case of difficulty, but it won't\n                appear in the directory. Later if you need to make changes or\n                remove your camp's listing, you can do so by logging in again.\n              </p>\n            </Col>\n          </Row>\n        </Container>\n      );\n    } else {\n      result = (\n        <div>\n          <Container>\n            <Row>\n              <Col style={{ marginTop: \"2rem\", marginBottom: \"1rem\" }}>\n                <h2>Submit your camp to the Queer Burners directory!</h2>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <p>\n                  Welcome! We're building a comprehensive list of queer and ally\n                  theme camps that will participate in Burning Man in{\" \"}\n                  {defaultYear}.\n                </p>\n                <p>\n                  To add your theme camp to this directory, please fill out this\n                  form.\n                </p>\n                <Form\n                  noValidate\n                  validated={this.state._validated}\n                  onSubmit={this.submitHandler}\n                >\n                  <Row>\n                    <Col xs={7}>\n                      <Form.Group controlId=\"name\">\n                        <Form.Label>Camp Name</Form.Label>\n                        <Form.Control\n                          type=\"input\"\n                          placeholder=\"404 Camp Not Found\"\n                          name=\"name\"\n                          value={this.state.name}\n                          onChange={this.changeHandler}\n                        ></Form.Control>\n                        <Form.Control.Feedback type=\"invalid\">\n                          {this.state._error_name}\n                        </Form.Control.Feedback>\n                        <Form.Text className=\"text-muted\">\n                          If your camp is registered with placement, make sure\n                          this name matches exactly.\n                        </Form.Text>\n                      </Form.Group>\n                    </Col>\n                    <Col>\n                      <Form.Group controlId=\"identifies\">\n                        <Form.Label>Identification</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          name=\"identifies\"\n                          value={this.state.identifies}\n                          onChange={this.changeHandler}\n                        >\n                          {campIdentifications.map((s) => (\n                            <option key={s}>{s}</option>\n                          ))}\n                        </Form.Control>\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                  <Form.Group controlId=\"about\">\n                    <Form.Label>About your camp</Form.Label>\n                    <Form.Control\n                      as=\"textarea\"\n                      rows=\"3\"\n                      placeholder=\"Max 255 characters\"\n                      name=\"about\"\n                      onChange={this.changeHandler}\n                      value={this.state.about}\n                    ></Form.Control>\n                    <Form.Control.Feedback type=\"invalid\">\n                      {this.state._error_about}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                  <Row>\n                    <Col>\n                      <Form.Group controlId=\"location.frontage\">\n                        <Form.Label>Frontage</Form.Label>\n                        <Form.Control\n                          name=\"location.frontage\"\n                          as=\"select\"\n                          onChange={this.changeHandler}\n                          value={this.state.location.frontage}\n                        >\n                          {streets.map((s) => (\n                            <option key={s}>{s}</option>\n                          ))}\n                        </Form.Control>\n                        <Form.Text className=\"text-muted\">\n                          The street that your camp faces\n                        </Form.Text>\n                      </Form.Group>\n                    </Col>\n                    <Col>\n                      <Form.Group controlId=\"location.intersection\">\n                        <Form.Label>Intersection</Form.Label>\n                        <Form.Control\n                          name=\"location.intersection\"\n                          as=\"select\"\n                          onChange={this.changeHandler}\n                          value={this.state.location.intersection}\n                        >\n                          {crossStreets(this.state.location.frontage).map(\n                            (s) => (\n                              <option key={s}>{s}</option>\n                            )\n                          )}\n                        </Form.Control>\n                        <Form.Text className=\"text-muted\">\n                          The nearest cross-street\n                        </Form.Text>\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col>\n                      <Form.Group controlId=\"url\">\n                        <Form.Label>Public web site</Form.Label>\n                        <Form.Control\n                          type=\"input\"\n                          name=\"url\"\n                          value={this.state.url}\n                          placeholder=\"https://www.example.com\"\n                          onChange={this.changeHandler}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          {this.state._error_url}\n                        </Form.Control.Feedback>\n                        <Form.Text className=\"text-muted\">\n                          Your camp's public website, if any. Do not use a\n                          Facebook URL here\n                        </Form.Text>\n                      </Form.Group>\n                    </Col>\n                    <Col>\n                      <Form.Group controlId=\"facebook\">\n                        <Form.Label>Facebook</Form.Label>\n                        <Form.Control\n                          type=\"input\"\n                          name=\"facebook\"\n                          value={this.state.facebook}\n                          placeholder=\"https://www.facebook.com/campname\"\n                          onChange={this.changeHandler}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          {this.state._error_facebook}\n                        </Form.Control.Feedback>\n                        <Form.Text className=\"text-muted\">\n                          Your camp's public Facebook page or group, if any.\n                          Provide the full URL\n                        </Form.Text>\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col>\n                      <Form.Group controlId=\"email\">\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control\n                          type=\"input\"\n                          name=\"email\"\n                          value={this.state.email}\n                          placeholder=\"info@example.com\"\n                          onChange={this.changeHandler}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          {this.state._error_email}\n                        </Form.Control.Feedback>\n                        <Form.Text className=\"text-muted\">\n                          Public email address for inquiries (this will be\n                          visible in the directory to anyone!)\n                        </Form.Text>\n                      </Form.Group>\n                    </Col>\n                    <Col>\n                      <Form.Group controlId=\"twitter\">\n                        <Form.Label>Twitter</Form.Label>\n                        <InputGroup>\n                          <InputGroup.Prepend>\n                            <InputGroup.Text>@</InputGroup.Text>\n                          </InputGroup.Prepend>\n                          <Form.Control\n                            type=\"input\"\n                            name=\"twitter\"\n                            value={this.state.twitter}\n                            placeholder=\"example\"\n                            onChange={this.changeHandler}\n                          />\n                          <Form.Control.Feedback type=\"invalid\">\n                            {this.state._error_twitter}\n                          </Form.Control.Feedback>\n                        </InputGroup>\n                        <Form.Text className=\"text-muted\">\n                          Your Twitter feed, if any\n                        </Form.Text>\n                      </Form.Group>\n                    </Col>\n                    <Col>\n                      <Form.Group controlId=\"instagram\">\n                        <Form.Label>Instagram</Form.Label>\n                        <InputGroup>\n                          <InputGroup.Prepend>\n                            <InputGroup.Text>@</InputGroup.Text>\n                          </InputGroup.Prepend>\n                          <Form.Control\n                            type=\"input\"\n                            name=\"instagram\"\n                            value={this.state.instagram}\n                            placeholder=\"example\"\n                            onChange={this.changeHandler}\n                          />\n                          <Form.Control.Feedback type=\"invalid\">\n                            {this.state._error_instagram}\n                          </Form.Control.Feedback>\n                        </InputGroup>\n                        <Form.Text className=\"text-muted\">\n                          Your Instagram feed, if any\n                        </Form.Text>\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                  <Form.Group controlId=\"thumbnail\">\n                    <Form.Label>Upload a picture of your camp here</Form.Label>\n                    <Form.File\n                      name=\"thumbnail\"\n                      label={this.state._thumbnail_user_filename}\n                      custom\n                      onChange={this.fileUploader}\n                      accept=\"image/png|image/jpeg\"\n                    />\n                    {this.state._upload_progress && (\n                      <ProgressBar\n                        striped\n                        now={this.state._upload_progress}\n                      ></ProgressBar>\n                    )}\n                    {this.state._thumbnail_object_url && (\n                      <div>\n                        <Image src={this.state._thumbnail_object_url} fluid />\n                        <Button\n                          variant=\"outline-danger\"\n                          onClick={() =>\n                            this.setState({\n                              thumbnail: \"\",\n                              _thumbnail_object_url: null,\n                              _thumbnail_user_filename: \"\",\n                            })\n                          }\n                        >\n                          Delete\n                        </Button>\n                      </div>\n                    )}\n                    <Form.Text className=\"text-muted\">\n                      This picture will appear in the Queer Burners directory.\n                      Submit a picture of your campers, your frontage, or\n                      something else fun, but please keep it SFW!\n                    </Form.Text>\n                  </Form.Group>\n                  <Form.Group controlId=\"joinOpen\">\n                    <Form.Label>Are you open to new members?</Form.Label>\n                    <Form.Check\n                      type=\"switch\"\n                      name=\"joinOpen\"\n                      value={this.state.joinOpen}\n                      label=\"Yes\"\n                      onChange={this.changeHandler}\n                    />\n                  </Form.Group>\n                  {this.state.joinOpen && (\n                    <div>\n                      <Form.Group controlId=\"joinMessage\">\n                        <Form.Label>Instructions</Form.Label>\n                        <Form.Control\n                          as=\"textarea\"\n                          rows=\"3\"\n                          name=\"joinMessage\"\n                          value={this.state.joinMessage}\n                          placeholder=\"Max 255 characters\"\n                          onChange={this.changeHandler}\n                        ></Form.Control>\n                        <Form.Control.Feedback type=\"invalid\">\n                          {this.state._error_joinMessage}\n                        </Form.Control.Feedback>\n                        <Form.Text className=\"text-muted\">\n                          Provide brief instructions for people who are\n                          interested in joining your camp. What should they do\n                          next?\n                        </Form.Text>\n                      </Form.Group>\n                      <Form.Group controlId=\"joinUrl\">\n                        <Form.Label>URL for application form</Form.Label>\n                        <Form.Control\n                          type=\"input\"\n                          name=\"joinUrl\"\n                          value={this.state.joinUrl}\n                          placeholder=\"https://www.example.com\"\n                          onChange={this.changeHandler}\n                        ></Form.Control>{\" \"}\n                        <Form.Control.Feedback type=\"invalid\">\n                          {this.state._error_joinUrl}\n                        </Form.Control.Feedback>\n                        <Form.Text className=\"text-muted\">\n                          Provide a link to an application form or information\n                          about joining.\n                        </Form.Text>\n                      </Form.Group>\n                    </div>\n                  )}\n                  <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                  </Button>\n                </Form>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      );\n    }\n\n    return result;\n  }\n}\n","import React from \"react\";\n\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Popover from \"react-bootstrap/Popover\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Image from \"react-bootstrap/Image\";\n\nfunction JoinButton(props) {\n  const o = props.o;\n  if (o.joinOpen) {\n    const popover = (\n      <Popover id=\"popover-basic\">\n        <Popover.Title as=\"h3\">Join our camp!</Popover.Title>\n        <Popover.Content>\n          {o.joinMessage}\n          {o.joinUrl && (\n            <div>\n              <hr></hr>\n              <a href={o.joinUrl}>Apply</a>\n            </div>\n          )}\n        </Popover.Content>\n      </Popover>\n    );\n\n    return (\n      <OverlayTrigger trigger=\"click\" placement=\"top\" overlay={popover}>\n        <Button variant=\"outline-info\" size=\"sm\" style={{ marginLeft: \"1rem\" }}>\n          Join Us!\n        </Button>\n      </OverlayTrigger>\n    );\n  } else return null;\n}\n\nfunction DisplayURL(props) {\n  if (props.url) {\n    const strippedURL = props.url\n      .replace(/^https?:\\/\\//, \"\")\n      .replace(/\\/$/, \"\");\n    return (\n      <div>\n        <Image\n          src={require(\"../assets/social_www.svg\")}\n          style={{ width: \"1.3rem\", paddingRight: \".35rem\" }}\n        />\n        <a href={props.url}>{strippedURL}</a>\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n\nfunction DisplayEmail(props) {\n  if (props.email) {\n    return (\n      <div style={{ marginBottom: \"1rem\" }}>\n        <Image\n          src={require(\"../assets/social_email.svg\")}\n          style={{ width: \"1.3rem\", paddingRight: \".35rem\" }}\n        />\n        <a href={\"mailto:\" + props.email}>{props.email}</a>\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n\nconst CampCard = (props) => {\n  const o = props.o;\n  return (\n    <Card style={{ width: \"20rem\" }} bg=\"light\">\n      {o.thumbnail && (\n        <Card.Img\n          variant=\"top\"\n          src={`https://s3.us-east-2.amazonaws.com/queerburnersdirectory.com-images/${o.thumbnail}`}\n        />\n      )}\n      <Card.Header>\n        <span style={{ fontSize: \"1.2rem\", fontWeight: \"bolder\" }}>\n          {o.name}\n        </span>\n        <JoinButton o={o} />\n      </Card.Header>\n      <Card.Body>\n        <Card.Subtitle className=\"mb-2 text-muted\">\n          {o.identifies}\n          {o.location && o.location.string && <div>{o.location.string}</div>}\n        </Card.Subtitle>\n        <Card.Text>{o.about}</Card.Text>\n        <DisplayURL url={o.url} />\n        <DisplayEmail email={o.email} />\n        {[\"facebook\", \"instagram\", \"twitter\"].map((s) => {\n          if (!o[s]) return null;\n          let url = o[s];\n          if (s === \"twitter\" || s === \"instagram\")\n            url = `https://${s}.com/${url}`;\n          return (\n            <a href={url} key={s}>\n              <Image\n                src={require(\"../assets/social_\" + s + \".svg\")}\n                style={{ width: \"1.8rem\", paddingRight: \".35rem\" }}\n              />\n            </a>\n          );\n        })}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default CampCard;\n","import React from \"react\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport CardColumns from \"react-bootstrap/CardColumns\";\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\n\nimport CampCard from \"./CampCard.js\";\n\nimport { Link } from \"react-router-dom\";\nimport { defaultYear } from \"../definitions.js\";\n\nimport axios from \"axios\";\n\nconst campIdentifications = [...require(\"shared\").campIdentifications];\n\nexport default class DirectoryBody extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filter: \"all\",\n      data: null,\n      year:\n        props.year && props.year >= 1996 && props.year < 3000\n          ? props.year\n          : defaultYear,\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await axios.get(\n        \"https://l374cc62kc.execute-api.us-east-2.amazonaws.com/Prod/camps/\" +\n          this.state.year\n      );\n      this.setState({ data: response.data });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    let filterButtonString = this.state.filter;\n    if (this.state.filter === \"all\") {\n      filterButtonString = \"Filter\";\n    }\n\n    return (\n      <div>\n        <Container>\n          <Row>\n            <Col style={{ marginTop: \"2rem\", marginBottom: \"1rem\" }}>\n              <h2>\n                Camp Directory {this.state.year}\n                <Link to=\"/submit\">\n                  <Button\n                    size=\"sm\"\n                    variant=\"outline-success\"\n                    style={{ marginLeft: \"2rem\" }}\n                  >\n                    Submit your camp!\n                  </Button>\n                </Link>\n                <DropdownButton\n                  as={ButtonGroup}\n                  id=\"dropdown-basic-button\"\n                  title={filterButtonString}\n                  size=\"sm\"\n                  style={{ marginLeft: \"2rem\" }}\n                >\n                  {campIdentifications.map((s) => (\n                    <Dropdown.Item\n                      key={s}\n                      onClick={() => this.setState({ filter: s })}\n                    >\n                      {s}\n                    </Dropdown.Item>\n                  ))}\n                  <Dropdown.Item\n                    onClick={() =>\n                      this.setState({ filter: \"Seeking new members\" })\n                    }\n                  >\n                    Seeking new members\n                  </Dropdown.Item>\n                </DropdownButton>\n                {this.state.filter !== \"all\" && (\n                  <Button\n                    size=\"sm\"\n                    variant=\"outline-primary\"\n                    style={{ marginLeft: \".5rem\" }}\n                    onClick={() => this.setState({ filter: \"all\" })}\n                  >\n                    Clear Filter\n                  </Button>\n                )}\n              </h2>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <CardColumns>\n                {!this.state.data ? (\n                  <div className=\"spinner-border\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                  </div>\n                ) : (\n                  this.state.data\n                    .filter(\n                      (onecamp) =>\n                        this.state.filter === \"all\" ||\n                        (this.state.filter === \"Seeking new members\" &&\n                          onecamp.joinOpen) ||\n                        this.state.filter === onecamp.identifies\n                    )\n                    .map((onecamp) => (\n                      <CampCard\n                        o={onecamp}\n                        key={onecamp.year + \" \" + onecamp.name}\n                      />\n                    ))\n                )}\n              </CardColumns>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nexport default class PrivacyBody extends React.Component {\n  render = () => (\n    <Container>\n      <h1>Privacy Policy</h1>\n\n      <p>Last updated: June 09, 2020</p>\n\n      <p>\n        This Privacy Policy describes Our policies and procedures on the\n        collection, use and disclosure of Your information when You use the\n        Service and tells You about Your privacy rights and how the law protects\n        You.\n      </p>\n\n      <p>\n        We use Your Personal data to provide and improve the Service. By using\n        the Service, You agree to the collection and use of information in\n        accordance with this Privacy Policy.\n      </p>\n\n      <h1>Interpretation and Definitions</h1>\n      <h2>Interpretation</h2>\n      <p>\n        The words of which the initial letter is capitalized have meanings\n        defined under the following conditions.\n      </p>\n      <p>\n        The following definitions shall have the same meaning regardless of\n        whether they appear in singular or in plural.\n      </p>\n\n      <h2>Definitions</h2>\n      <p>For the purposes of this Privacy Policy:</p>\n      <ul>\n        <li>\n          <p>\n            <strong>You</strong> means the individual accessing or using the\n            Service, or the company, or other legal entity on behalf of which\n            such individual is accessing or using the Service, as applicable.\n          </p>\n        </li>\n        <li>\n          <p>\n            <strong>Company</strong> (referred to as either \"the Company\", \"We\",\n            \"Us\" or \"Our\" in this Agreement) refers to Queer Burners Directory.\n          </p>\n        </li>\n        <li>\n          <strong>Affiliate</strong> means an entity that controls, is\n          controlled by or is under common control with a party, where \"control\"\n          means ownership of 50% or more of the shares, equity interest or other\n          securities entitled to vote for election of directors or other\n          managing authority.\n        </li>\n        <li>\n          <strong>Account</strong> means a unique account created for You to\n          access our Service or parts of our Service.\n        </li>\n        <li>\n          <strong>Website</strong> refers to Queer Burners Directory, accessible\n          from https://www.queerburnersdirectory.com\n        </li>\n        <li>\n          <strong>Service</strong> refers to the Website.\n        </li>\n        <li>\n          <strong>Country</strong> refers to: United States\n        </li>\n        <li>\n          <p>\n            <strong>Service Provider</strong> means any natural or legal person\n            who processes the data on behalf of the Company. It refers to\n            third-party companies or individuals employed by the Company to\n            facilitate the Service, to provide the Service on behalf of the\n            Company, to perform services related to the Service or to assist the\n            Company in analyzing how the Service is used.\n          </p>\n        </li>\n        <li>\n          <strong>Third-party Social Media Service</strong> refers to any\n          website or any social network website through which a User can log in\n          or create an account to use the Service.\n        </li>\n        <li>\n          <p>\n            <strong>Personal Data</strong> is any information that relates to an\n            identified or identifiable individual.\n          </p>\n        </li>\n        <li>\n          <strong>Cookies</strong> are small files that are placed on Your\n          computer, mobile device or any other device by a website, containing\n          the details of Your browsing history on that website among its many\n          uses.\n        </li>{\" \"}\n        <li>\n          <strong>Device</strong> means any device that can access the Service\n          such as a computer, a cellphone or a digital tablet.\n        </li>\n        <li>\n          <strong>Usage Data</strong> refers to data collected automatically,\n          either generated by the use of the Service or from the Service\n          infrastructure itself (for example, the duration of a page visit).\n        </li>\n      </ul>\n\n      <h1>Collecting and Using Your Personal Data</h1>\n      <h2>Types of Data Collected</h2>\n\n      <h3>Personal Data</h3>\n      <p>\n        While using Our Service, We may ask You to provide Us with certain\n        personally identifiable information that can be used to contact or\n        identify You. Personally identifiable information may include, but is\n        not limited to:\n      </p>\n      <ul>\n        <li>Email address</li> <li>First name and last name</li>{\" \"}\n        <li>Usage Data</li>\n      </ul>\n\n      <h3>Usage Data</h3>\n      <p>Usage Data is collected automatically when using the Service.</p>\n      <p>\n        Usage Data may include information such as Your Device's Internet\n        Protocol address (e.g. IP address), browser type, browser version, the\n        pages of our Service that You visit, the time and date of Your visit,\n        the time spent on those pages, unique device identifiers and other\n        diagnostic data.\n      </p>\n      <p>\n        When You access the Service by or through a mobile device, We may\n        collect certain information automatically, including, but not limited\n        to, the type of mobile device You use, Your mobile device unique ID, the\n        IP address of Your mobile device, Your mobile operating system, the type\n        of mobile Internet browser You use, unique device identifiers and other\n        diagnostic data.\n      </p>\n      <p>\n        We may also collect information that Your browser sends whenever You\n        visit our Service or when You access the Service by or through a mobile\n        device.\n      </p>\n\n      <h3>Tracking Technologies and Cookies</h3>\n      <p>\n        We use Cookies and similar tracking technologies to track the activity\n        on Our Service and store certain information. Tracking technologies used\n        are beacons, tags, and scripts to collect and track information and to\n        improve and analyze Our Service.\n      </p>\n      <p>\n        You can instruct Your browser to refuse all Cookies or to indicate when\n        a Cookie is being sent. However, if You do not accept Cookies, You may\n        not be able to use some parts of our Service.\n      </p>\n      <p>\n        Cookies can be \"Persistent\" or \"Session\" Cookies. Persistent Cookies\n        remain on your personal computer or mobile device when You go offline,\n        while Session Cookies are deleted as soon as You close your web browser.\n        Learn more about cookies here:{\" \"}\n        <a href=\"https://www.freeprivacypolicy.com/blog/cookies/\">\n          Cookies: What Do They Do?\n        </a>\n      </p>\n      <p>\n        We use both session and persistent Cookies for the purposes set out\n        below:\n      </p>\n      <ul>\n        <li>\n          <p>\n            <strong>Necessary / Essential Cookies</strong>\n          </p>\n          <p>Type: Session Cookies</p>\n          <p>Administered by: Us</p>\n          <p>\n            Purpose: These Cookies are essential to provide You with services\n            available through the Website and to enable You to use some of its\n            features. They help to authenticate users and prevent fraudulent use\n            of user accounts. Without these Cookies, the services that You have\n            asked for cannot be provided, and We only use these Cookies to\n            provide You with those services.\n          </p>\n        </li>\n        <li>\n          <p>\n            <strong>Cookies Policy / Notice Acceptance Cookies</strong>\n          </p>\n          <p>Type: Persistent Cookies</p>\n          <p>Administered by: Us</p>\n          <p>\n            Purpose: These Cookies identify if users have accepted the use of\n            cookies on the Website.\n          </p>\n        </li>\n        <li>\n          <p>\n            <strong>Functionality Cookies</strong>\n          </p>\n          <p>Type: Persistent Cookies</p>\n          <p>Administered by: Us</p>\n          <p>\n            Purpose: These Cookies allow us to remember choices You make when\n            You use the Website, such as remembering your login details or\n            language preference. The purpose of these Cookies is to provide You\n            with a more personal experience and to avoid You having to re-enter\n            your preferences every time You use the Website.\n          </p>\n        </li>\n      </ul>\n      <p>\n        For more information about the cookies we use and your choices regarding\n        cookies, please visit our Cookies Policy.\n      </p>\n\n      <h2>Use of Your Personal Data</h2>\n      <p>The Company may use Personal Data for the following purposes:</p>\n      <ul>\n        <li>\n          <strong>To provide and maintain our Service</strong>, including to\n          monitor the usage of our Service.\n        </li>\n        <li>\n          <strong>To manage Your Account:</strong> to manage Your registration\n          as a user of the Service. The Personal Data You provide can give You\n          access to different functionalities of the Service that are available\n          to You as a registered user.\n        </li>\n        <li>\n          <strong>For the performance of a contract:</strong> the development,\n          compliance and undertaking of the purchase contract for the products,\n          items or services You have purchased or of any other contract with Us\n          through the Service.\n        </li>\n        <li>\n          <strong>To contact You:</strong> To contact You by email, telephone\n          calls, SMS, or other equivalent forms of electronic communication,\n          such as a mobile application's push notifications regarding updates or\n          informative communications related to the functionalities, products or\n          contracted services, including the security updates, when necessary or\n          reasonable for their implementation.\n        </li>\n        <li>\n          <strong>To provide You</strong> with news, special offers and general\n          information about other goods, services and events which we offer that\n          are similar to those that you have already purchased or enquired about\n          unless You have opted not to receive such information.\n        </li>\n        <li>\n          <strong>To manage Your requests:</strong> To attend and manage Your\n          requests to Us.\n        </li>\n      </ul>\n\n      <p>We may share your personal information in the following situations:</p>\n\n      <ul>\n        <li>\n          <strong>With Service Providers:</strong> We may share Your personal\n          information with Service Providers to monitor and analyze the use of\n          our Service, to contact You.\n        </li>\n        <li>\n          <strong>For Business transfers:</strong> We may share or transfer Your\n          personal information in connection with, or during negotiations of,\n          any merger, sale of Company assets, financing, or acquisition of all\n          or a portion of our business to another company.\n        </li>\n        <li>\n          <strong>With Affiliates:</strong> We may share Your information with\n          Our affiliates, in which case we will require those affiliates to\n          honor this Privacy Policy. Affiliates include Our parent company and\n          any other subsidiaries, joint venture partners or other companies that\n          We control or that are under common control with Us.\n        </li>\n        <li>\n          <strong>With Business partners:</strong> We may share Your information\n          with Our business partners to offer You certain products, services or\n          promotions.\n        </li>\n        <li>\n          <strong>With other users:</strong> when You share personal information\n          or otherwise interact in the public areas with other users, such\n          information may be viewed by all users and may be publicly distributed\n          outside. If You interact with other users or register through a\n          Third-Party Social Media Service, Your contacts on the Third-Party\n          Social Media Service may see You name, profile, pictures and\n          description of Your activity. Similarly, other users will be able to\n          view descriptions of Your activity, communicate with You and view Your\n          profile.\n        </li>\n      </ul>\n\n      <h2>Retention of Your Personal Data</h2>\n      <p>\n        The Company will retain Your Personal Data only for as long as is\n        necessary for the purposes set out in this Privacy Policy. We will\n        retain and use Your Personal Data to the extent necessary to comply with\n        our legal obligations (for example, if we are required to retain your\n        data to comply with applicable laws), resolve disputes, and enforce our\n        legal agreements and policies.\n      </p>\n      <p>\n        The Company will also retain Usage Data for internal analysis purposes.\n        Usage Data is generally retained for a shorter period of time, except\n        when this data is used to strengthen the security or to improve the\n        functionality of Our Service, or We are legally obligated to retain this\n        data for longer time periods.\n      </p>\n\n      <h2>Transfer of Your Personal Data</h2>\n      <p>\n        Your information, including Personal Data, is processed at the Company's\n        operating offices and in any other places where the parties involved in\n        the processing are located. It means that this information may be\n        transferred to — and maintained on — computers located outside of Your\n        state, province, country or other governmental jurisdiction where the\n        data protection laws may differ than those from Your jurisdiction.\n      </p>\n      <p>\n        Your consent to this Privacy Policy followed by Your submission of such\n        information represents Your agreement to that transfer.\n      </p>\n      <p>\n        The Company will take all steps reasonably necessary to ensure that Your\n        data is treated securely and in accordance with this Privacy Policy and\n        no transfer of Your Personal Data will take place to an organization or\n        a country unless there are adequate controls in place including the\n        security of Your data and other personal information.\n      </p>\n\n      <h2>Disclosure of Your Personal Data</h2>\n      <h3>Business Transactions</h3>\n      <p>\n        If the Company is involved in a merger, acquisition or asset sale, Your\n        Personal Data may be transferred. We will provide notice before Your\n        Personal Data is transferred and becomes subject to a different Privacy\n        Policy.\n      </p>\n      <h3>Law enforcement</h3>\n      <p>\n        Under certain circumstances, the Company may be required to disclose\n        Your Personal Data if required to do so by law or in response to valid\n        requests by public authorities (e.g. a court or a government agency).\n      </p>\n      <h3>Other legal requirements</h3>\n      <p>\n        The Company may disclose Your Personal Data in the good faith belief\n        that such action is necessary to:\n      </p>\n      <ul>\n        <li>Comply with a legal obligation</li>\n        <li>Protect and defend the rights or property of the Company</li>\n        <li>\n          Prevent or investigate possible wrongdoing in connection with the\n          Service\n        </li>\n        <li>\n          Protect the personal safety of Users of the Service or the public\n        </li>\n        <li>Protect against legal liability</li>\n      </ul>\n\n      <h2>Security of Your Personal Data</h2>\n      <p>\n        The security of Your Personal Data is important to Us, but remember that\n        no method of transmission over the Internet, or method of electronic\n        storage is 100% secure. While We strive to use commercially acceptable\n        means to protect Your Personal Data, We cannot guarantee its absolute\n        security.\n      </p>\n\n      <h1>Children's Privacy</h1>\n      <p>\n        Our Service does not address anyone under the age of 13. We do not\n        knowingly collect personally identifiable information from anyone under\n        the age of 13. If You are a parent or guardian and You are aware that\n        Your child has provided Us with Personal Data, please contact Us. If We\n        become aware that We have collected Personal Data from anyone under the\n        age of 13 without verification of parental consent, We take steps to\n        remove that information from Our servers.\n      </p>\n      <p>\n        If We need to rely on consent as a legal basis for processing Your\n        information and Your country requires consent from a parent, We may\n        require Your parent's consent before We collect and use that\n        information.\n      </p>\n\n      <h1>Links to Other Websites</h1>\n      <p>\n        Our Service may contain links to other websites that are not operated by\n        Us. If You click on a third party link, You will be directed to that\n        third party's site. We strongly advise You to review the Privacy Policy\n        of every site You visit.\n      </p>\n      <p>\n        We have no control over and assume no responsibility for the content,\n        privacy policies or practices of any third party sites or services.\n      </p>\n\n      <h1>Changes to this Privacy Policy</h1>\n      <p>\n        We may update our Privacy Policy from time to time. We will notify You\n        of any changes by posting the new Privacy Policy on this page.\n      </p>\n      <p>\n        We will let You know via email and/or a prominent notice on Our Service,\n        prior to the change becoming effective and update the \"Last updated\"\n        date at the top of this Privacy Policy.\n      </p>\n      <p>\n        You are advised to review this Privacy Policy periodically for any\n        changes. Changes to this Privacy Policy are effective when they are\n        posted on this page.\n      </p>\n\n      <h1>Contact Us</h1>\n      <p>\n        If you have any questions about this Privacy Policy, You can contact us:\n      </p>\n      <ul>\n        <li>By email: joel@spolsky.com</li>\n      </ul>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport logo from \"./assets/header_logo.jpg\";\n\nimport SubmitBody from \"./components/SubmitBody.js\";\nimport DirectoryBody from \"./components/DirectoryBody.js\";\nimport PrivacyBody from \"./components/PrivacyBody.js\";\n\nimport { Link } from \"react-router-dom\";\nimport { GoogleLogin, GoogleLogout } from \"react-google-login\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport Image from \"react-bootstrap/Image\";\n\nimport \"./App.css\";\n\nconst noUser = {\n  loggedin: false,\n  username: \"\",\n  user_image: null,\n  googleId: null,\n  tokenId: null,\n};\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = noUser;\n  }\n\n  googleLoginSuccess = (response) => {\n    console.log(\"Google Login Success\");\n    console.log(response);\n    const newState = {\n      loggedin: true,\n      username: response.profileObj.name,\n      user_image: response.profileObj.imageUrl,\n      googleId: response.profileObj.googleId,\n      tokenId: response.tokenId,\n    };\n    this.setState(newState);\n    this.props.onUserChange(newState);\n    // TODO this ^^ is making errors on fresh loads\n    // the prop must not be set or something, or it is not set yet\n  };\n\n  googleLoginFailure = (response) => {\n    console.log(\"Google Login Failure\");\n    console.log(response);\n    this.setState(noUser);\n    this.props.onUserChange(noUser);\n  };\n\n  googleLogout = () => {\n    console.log(\"Google logout\");\n    this.setState(noUser);\n    this.props.onUserChange(noUser);\n  };\n\n  render() {\n    return (\n      <div>\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand href=\"http://queerburners.com/\">\n            Queer Burners\n          </Navbar.Brand>\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/\">Directory</Nav.Link>\n            <Nav.Link href=\"/submit\">Submit</Nav.Link>\n            <NavDropdown title=\"Past Years\" id=\"collasible-nav-dropdown\">\n              <NavDropdown.Item href=\"/year/2019\">\n                2019 Metamorphoses\n              </NavDropdown.Item>\n              <NavDropdown.Item href=\"/year/2020\">\n                2020 The Multiverse\n              </NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n          {!this.state.loggedin && (\n            <GoogleLogin\n              clientId=\"1091094241484-ve5hbpa496m6d1k21m8r5ni16kvrkifi.apps.googleusercontent.com\"\n              buttonText=\"Login\"\n              onSuccess={this.googleLoginSuccess}\n              onFailure={this.googleLoginFailure}\n              cookiePolicy={\"single_host_origin\"}\n              isSignedIn={true}\n            />\n          )}\n          {this.state.loggedin && (\n            <Nav>\n              <Image\n                roundedCircle\n                src={this.state.user_image}\n                style={{ maxHeight: \"2rem\" }}\n              ></Image>\n              <NavDropdown title={this.state.username}>\n                <NavDropdown.Item>\n                  <GoogleLogout\n                    clientId=\"1091094241484-ve5hbpa496m6d1k21m8r5ni16kvrkifi.apps.googleusercontent.com\"\n                    buttonText=\"Logout\"\n                    onLogoutSuccess={this.googleLogout}\n                  />\n                </NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n          )}\n        </Navbar>\n        <Link to=\"/\">\n          <img className=\"img-fluid w-100\" src={logo} alt=\"placeholder 960\" />\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport function Year(props) {\n  return <Directory year={props.match.params.year} />;\n}\n\nexport function Directory(props) {\n  return (\n    <div className=\"App\">\n      <Header />\n      <DirectoryBody year={props.year} />\n    </div>\n  );\n}\n\nexport class Submit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  userChange = (newUserState) => {\n    this.setState(newUserState);\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header onUserChange={(x) => this.userChange(x)} />\n        <SubmitBody\n          loggedin={this.state.loggedin}\n          tokenId={this.state.tokenId}\n        />\n      </div>\n    );\n  }\n}\n\nexport function PrivacyPolicy() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <PrivacyBody />\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Directory, Submit, PrivacyPolicy, Year } from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Route } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <Route exact path=\"/\" component={Directory} />\n    <Route path=\"/submit\" component={Submit} />\n    <Route path=\"/year/:year\" component={Year} />\n    <Route path=\"/privacy\" component={PrivacyPolicy} />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const fieldError = (key, value) => {\n  let err = \"\";\n  switch (key) {\n    case \"year\":\n      if (typeof value !== \"number\") {\n        err = \"Year is not a number\";\n      } else if (value < 2018 || value > 2199) {\n        err = \"Year out of range\";\n      }\n      break;\n\n    case \"name\":\n      if (typeof value !== \"string\") {\n        err = \"Camp name is not a string\";\n      } else if (value.length === 0) {\n        err = \"Camp name is required\";\n      } else if (value.length > 50) {\n        err = `Camp name is too long by ${value.length - 50}`;\n      }\n      break;\n\n    case \"identifies\":\n      if (typeof value !== \"string\") {\n        err = \"identifies is not a string\";\n      } else if (value === \"\") {\n        err = \"identifies is required (try LGBTQ)\";\n      } else if (!campIdentifications.includes(value)) {\n        err = `${value} is not a valid camp identity (try LGBTQ)`;\n      }\n      break;\n\n    case \"about\":\n      if (typeof value !== \"string\") {\n        err = \"about is not a string\";\n      } else if (value.length > 255) {\n        err = `about is too long by ${value.length - 255}`;\n      }\n      break;\n\n    case \"location\":\n      if (\n        typeof value !== \"object\" ||\n        !value.frontage ||\n        !value.intersection ||\n        typeof value.frontage !== \"string\" ||\n        typeof value.intersection !== \"string\"\n      ) {\n        err =\n          \"type error - location should be an object with frontage and intersection strings\";\n      }\n      break;\n\n    case \"url\":\n      if (typeof value !== \"string\") {\n        err = \"url is not a string\";\n      } else if (value === \"\") {\n        err = \"\";\n      } else if (value.length > 128) {\n        err = `url is too long by ${value.length - 128}`;\n      } else if (!validateURL(value)) {\n        err = \"invalid url\";\n      } else if (isFacebookURL(value)) {\n        err = \"use the Facebook field for a Facebook page\";\n      }\n      break;\n\n    case \"facebook\":\n      if (typeof value !== \"string\") {\n        err = \"facebook is not a string\";\n      } else if (value === \"\") {\n        err = \"\";\n      } else if (value.length > 128) {\n        err = `facebook is too long by ${value.length - 128}`;\n      } else if (!validateURL(value)) {\n        err = \"invalid facebook url\";\n      } else if (!isFacebookURL(value)) {\n        err = `${value} is not a Facebook page/group`;\n      }\n      break;\n\n    case \"email\":\n      if (typeof value !== \"string\") {\n        err = \"email is not a string\";\n      } else if (value.length > 256) {\n        err = `email is too long by ${value.length - 256}`;\n      } else if (value.length > 0 && !validateEmail(value)) {\n        err = `'${value}' is not a valid email address`;\n      }\n      break;\n\n    case \"twitter\":\n      if (typeof value !== \"string\") {\n        err = \"twitter is not a string\";\n      } else if (value.length > 15) {\n        err = `twitter is too long by ${value.length - 15}`;\n      } else if (!/^[a-z0-9]*$/i.test(value)) {\n        err = \"invalid twitter name\";\n      }\n      break;\n\n    case \"instagram\":\n      if (typeof value !== \"string\") {\n        err = \"instagram is not a string\";\n      } else if (value.length > 30) {\n        err = `instagram is too long by ${value.length - 30}`;\n      } else if (!/^[a-z0-9._]*$/i.test(value)) {\n        err = \"invalid instagram handle\";\n      }\n      break;\n\n    case \"joinMessage\":\n      if (typeof value !== \"string\") {\n        err = \"Joining information (joinMessage) is not a string\";\n      } else if (value.length > 255) {\n        err = `Joining information is too long by ${value.length - 255}`;\n      }\n      break;\n\n    case \"joinUrl\":\n      if (typeof value !== \"string\") {\n        err = \"Joining URL (joinUrl) is not a string\";\n      } else if (value === \"\") {\n        err = \"\";\n      } else if (value.length > 128) {\n        err = `Joining URL is too long by ${value.length - 128}`;\n      } else if (!validateURL(value)) {\n        err = \"invalid URL for joining\";\n      }\n      break;\n\n    default:\n  }\n\n  return err;\n};\n\nconst campErrors = (camp) => {\n  let errors = [];\n\n  [\n    \"year\",\n    \"name\",\n    \"identifies\",\n    \"about\",\n    \"location\",\n    \"url\",\n    \"facebook\",\n    \"email\",\n    \"twitter\",\n    \"instagram\",\n  ].map((f) => {\n    let err = fieldError(f, camp[f]);\n    if (err !== \"\") {\n      errors.push({\n        field: f,\n        err: err,\n      });\n    }\n  });\n\n  return errors;\n};\n\nconst tester = /^[-!#$%&'*+\\/0-9=?A-Z^_a-z`{|}~](\\.?[-!#$%&'*+\\/0-9=?A-Z^_a-z`{|}~])*@[a-zA-Z0-9](-*\\.?[a-zA-Z0-9])*\\.[a-zA-Z](-?[a-zA-Z0-9])+$/;\n// Thanks to:\n// http://fightingforalostcause.net/misc/2006/compare-email-regex.php\n// http://thedailywtf.com/Articles/Validating_Email_Addresses.aspx\n// http://stackoverflow.com/questions/201323/what-is-the-best-regular-expression-for-validating-email-addresses/201378#201378\nconst validateEmail = (email) => {\n  if (!email) return false;\n\n  if (email.length > 256) return false;\n\n  if (!tester.test(email)) return false;\n\n  // Further checking of some things regex can't handle\n  const [account, address] = email.split(\"@\");\n  if (account.length > 64) return false;\n\n  const domainParts = address.split(\".\");\n  if (\n    domainParts.some(function (part) {\n      return part.length > 63;\n    })\n  )\n    return false;\n\n  return true;\n};\n\nconst validateURL = (s) => {\n  let url;\n\n  try {\n    url = new URL(s);\n  } catch (_) {\n    return false;\n  }\n\n  return url.protocol === \"http:\" || url.protocol === \"https:\";\n};\n\nconst isFacebookURL = (s) => {\n  let url;\n\n  try {\n    url = new URL(s);\n  } catch (_) {\n    return false;\n  }\n\n  return [\"facebook.com\", \"www.facebook.com\", \"m.facebook.com\"].includes(\n    url.hostname\n  );\n};\n\n//\n// Encode a little bit of Burning Man cartography\n// If this function is confusing to you, look at a map of Black Rock City\n//\nconst crossStreets = (frontage) => {\n  if (frontage === streets[0] /* unknown */) {\n    return [streets[0]];\n  }\n  if (frontage.includes(\":\")) {\n    return streets.filter((s) => s === \"Esplanade\" || s.length === 1);\n  } else {\n    return streets.filter((s) => s.includes(\":\"));\n  }\n};\n\nconst locationToString = (frontage, intersection) => {\n  if (frontage === streets[0]) {\n    return streets[0];\n  } else if (frontage === \"Rod's Road\" || frontage === \"Center Camp Plaza\") {\n    // yeah. This is placement's convention because those circular streets\n    // don't really have intersections\n    return `${frontage} @ ${intersection}`;\n  } else {\n    return `${frontage} & ${intersection}`;\n  }\n};\n\nconst campIdentifications = [\n  \"LGBTQ\",\n  \"Lesbian / Female Identified\",\n  \"Gay / Male Identified\",\n  \"Trans / GNC / Non-binary\",\n  \"Ally Camp\",\n];\n\nconst streets = [\n  \"Unknown\",\n  \"Esplanade\",\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n  \"G\",\n  \"H\",\n  \"I\",\n  \"J\",\n  \"K\",\n  \"L\",\n  \"M\",\n  \"Rod's Road\",\n  \"Center Camp Plaza\",\n  \"2:00\",\n  \"2:15\",\n  \"2:30\",\n  \"2:45\",\n  \"3:00\",\n  \"3:15\",\n  \"3:30\",\n  \"3:45\",\n  \"4:00\",\n  \"4:15\",\n  \"4:30\",\n  \"4:45\",\n  \"5:00\",\n  \"5:15\",\n  \"5:30\",\n  \"5:45\",\n  \"6:00\",\n  \"6:15\",\n  \"6:30\",\n  \"6:45\",\n  \"7:00\",\n  \"7:15\",\n  \"7:30\",\n  \"7:45\",\n  \"8:00\",\n  \"8:15\",\n  \"8:30\",\n  \"8:45\",\n  \"9:00\",\n  \"9:15\",\n  \"9:30\",\n  \"9:45\",\n  \"10:00\",\n];\n\nmodule.exports = {\n  fieldError: fieldError,\n  campErrors: campErrors,\n  campIdentifications: campIdentifications,\n  streets: streets,\n  crossStreets: crossStreets,\n  locationToString: locationToString,\n};\n","module.exports = __webpack_public_path__ + \"static/media/social_www.f83690ad.svg\";","module.exports = __webpack_public_path__ + \"static/media/social_email.fb4433e3.svg\";","module.exports = __webpack_public_path__ + \"static/media/header_logo.9a78c43d.jpg\";"],"sourceRoot":""}