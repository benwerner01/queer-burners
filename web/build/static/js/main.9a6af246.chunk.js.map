{"version":3,"sources":["assets/header.jpg","assets sync /^/.//social_.*/.svg$","assets/social_email.svg","assets/social_facebook.svg","assets/social_instagram.svg","assets/social_twitter.svg","assets/social_url.svg","definitions.js","components/CampCard.js","components/DirectoryBody.js","components/Authenticate.js","components/ImageUploader.js","components/DeleteButton.js","components/SubmitBody.js","components/Header.js","components/Footer.js","components/ScrollToTop.js","serviceWorker.js","components/EditPosts.js","components/EditPost.js","components/ViewPost.js","index.js","../../shared/index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","defaultYear","Date","getFullYear","api","s3images","JoinButton","props","joinOpen","popover","Popover","Title","as","Content","joinMessage","joinUrl","href","OverlayTrigger","rootClose","trigger","placement","overlay","Badge","variant","size","style","cursor","color","DisplaySocialLink","linkType","raw","display","replace","Image","src","require","width","paddingRight","fontSize","Lightbox","Modal","show","dialogClassName","onHide","setShow","Header","closeButton","name","Body","padding","image","fluid","about","length","Footer","justifyContent","CampCard","useState","showLightbox","setShowLightbox","fullSizeImage","centered","Card","bg","border","ismine","thumbnail","Img","role","onClick","fontWeight","Subtitle","className","identifies","location","string","Text","s","key","marginTop","offerShowers","Tooltip","aria-label","offerWater","offerMeals","campFee","virginsWelcome","to","year","encodeURIComponent","isadmin","contact","email","CancelToken","axios","campIdentifications","neighborhood","camp","s430","s730","includes","frontage","intersection","DirectoryBody","onSearchChange","event","setState","search","target","value","state","filter","data","cancelFn","clearFirst","this","get","auth","username","userData","idToken","password","cancelToken","c","response","isCancel","console","error","fetchData","prevProps","isAdmin","filterButtonString","Container","Row","Col","md","Form","inline","Button","type","disabled","aria-hidden","DropdownButton","ButtonGroup","title","marginRight","Dropdown","Item","InputGroup","FormControl","autoFocus","placeholder","onChange","Append","CardColumns","onecamp","toLowerCase","startsWith","hashEmail","text","textDecoration","React","Component","LogonLink","LogonLinkAddress","useLocation","link","oauthEndpoint","pathname","window","origin","localStorage","getItem","Authenticate","useEffect","isLoggedOn","tmpUserData","JSON","parse","expires","valueOf","OnUserDataChange","interval","setInterval","removeItem","clearInterval","roundedCircle","imageUrl","NavDropdown","alignRight","fullName","setItem","Nav","Link","PostAuthenticate","status","setStatus","setIsLoggedOn","a","post","URLSearchParams","redirect_uri","result","Number","duration","stringify","queryParams","Spinner","animation","ImageUploader","onSubmitInProgress","objectUrl","setObjectUrl","userFilename","setUserFilename","uploadProgress","setUploadProgress","needsScroll","setNeedsScroll","imageEl","useRef","setTimeout","current","scrollIntoView","block","behavior","startUpload","files","actualFile","ext","uploader","reader","FileReader","onload","binary","atob","split","array","i","push","charCodeAt","blobData","Blob","Uint8Array","contentType","put","url","headers","onUploadProgress","pe","lengthComputable","Math","floor","loaded","total","URL","createObjectURL","fileName","readAsDataURL","request","File","label","custom","accept","ProgressBar","striped","now","ref","DeleteButton","done","setDone","alertEl","redirectOnSuccess","Alert","Heading","message","longMessage","delete","apiToDelete","streets","crossStreets","SubmitBody","submitHandler","preventDefault","_validated","_error_submit","_submit_in_progress","trim","fieldsToValidate","x","fieldValidator","_submit_successful","msg","err","fieldError","document","getElementById","setCustomValidity","changeHandler","y","splitname","checked","xx","emptyCamp","_error_name","_error_about","_error_url","_error_facebook","_error_email","_error_twitter","_error_instagram","_error_joinMessage","_error_joinUrl","_ready_to_show_form","_submit_disabled","originalName","log","noValidate","validated","onSubmit","Instructions","xs","Group","controlId","Label","Control","Feedback","rows","facebook","Prepend","twitter","instagram","inProgress","Check","backgroundColor","dismissible","onClose","NotLoggedIn","Navbar","collapseOnSelect","expand","Brand","Toggle","aria-controls","Collapse","banner","alt","marginBottom","withRouter","history","unlisten","listen","scrollTo","Boolean","hostname","match","EditPosts","setData","sortedPosts","sort","b","path","localeCompare","Table","bordered","hover","description","EditPost","setPath","setDescription","setPost","locked","setLocked","setLoaded","pathError","setPathError","formValidated","setFormValidated","saveInProgress","setSaveInProgress","saveError","setSaveError","saveHandler","tester2","endsWith","test","postToSubmit","imageUploadHandler","blobInfo","success","failure","progress","localFilename","filename","localExtension","exec","blob","readOnly","initialValue","apiKey","init","height","menubar","images_upload_handler","image_caption","plugins","block_formats","toolbar","getContent","ViewPost","dangerouslySetInnerHTML","__html","TopLevelComponent","setUserData","newUserData","exact","render","params","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister","catch","crypto","validateURL","isFacebookURL","validateEmail","tester","account","address","some","part","_","protocol","campErrors","errors","f","field","locationToString","hash","createHash","update","digest"],"mappings":"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","file":"static/js/main.9a6af246.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header.8c56eeaa.jpg\";","var map = {\n\t\"./social_email.svg\": 225,\n\t\"./social_facebook.svg\": 226,\n\t\"./social_instagram.svg\": 227,\n\t\"./social_twitter.svg\": 228,\n\t\"./social_url.svg\": 229\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 224;","module.exports = __webpack_public_path__ + \"static/media/social_email.fb4433e3.svg\";","module.exports = __webpack_public_path__ + \"static/media/social_facebook.51d5c4a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/social_instagram.76090faf.svg\";","module.exports = __webpack_public_path__ + \"static/media/social_twitter.abfbd4d9.svg\";","module.exports = __webpack_public_path__ + \"static/media/social_url.f83690ad.svg\";","export const defaultYear = new Date().getFullYear();\nexport const api =\n  \"https://wwe0vuykb9.execute-api.us-east-2.amazonaws.com/Prod\";\n// \"http://localhost:3001\"; // for local docker testing ~!\nexport const s3images =\n  \"https://s3.us-east-2.amazonaws.com/queerburnersdirectory.com-images\";\nexport const googleClientId =\n  \"1091094241484-ve5hbpa496m6d1k21m8r5ni16kvrkifi.apps.googleusercontent.com\";\nexport const oauthEndpoint = \"https://accounts.google.com/o/oauth2/v2/auth\";\nexport const apiKeyTinyMCE = \"zdh08645sds1nt23ip19o4wcxn97mqppnuqeid6wfu3kpjz9\";\n","import React, { useState } from \"react\";\n\nimport Card from \"react-bootstrap/Card\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Popover from \"react-bootstrap/Popover\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Image from \"react-bootstrap/Image\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport { Link } from \"react-router-dom\";\nimport { s3images } from \"../definitions.js\";\n\nfunction JoinButton(props) {\n  const o = props.o;\n  if (o.joinOpen) {\n    const popover = (\n      <Popover id=\"popover-basic\">\n        <Popover.Title as=\"h3\">Join our camp!</Popover.Title>\n        <Popover.Content>\n          {o.joinMessage}\n          {o.joinUrl && (\n            <div>\n              <hr></hr>\n              <a href={o.joinUrl}>Apply</a>\n            </div>\n          )}\n        </Popover.Content>\n      </Popover>\n    );\n\n    return (\n      <OverlayTrigger\n        rootClose\n        trigger=\"click\"\n        placement=\"top\"\n        overlay={popover}\n      >\n        <Badge\n          variant=\"primary\"\n          as=\"a\"\n          size=\"sm\"\n          style={{ cursor: \"pointer\", color: \"white\" }}\n        >\n          Join Us!\n        </Badge>\n      </OverlayTrigger>\n    );\n  } else return null;\n}\n\nconst DisplaySocialLink = ({ linkType, raw }) => {\n  // valid linkTypes: url, email, facebook, instagram, twitter\n  // raw is the way it is stored in the database in the field of the same name\n\n  if (!raw) return null;\n\n  let href = raw;\n  let display = raw;\n\n  switch (linkType) {\n    case \"url\":\n      display = raw\n        .replace(/^https?:\\/\\//, \"\")\n        .replace(/\\/$/, \"\")\n        .replace(/^www\\./, \"\");\n      break;\n\n    case \"email\":\n      href = `mailto:${raw}`;\n      break;\n\n    case \"facebook\":\n      display = raw\n        .replace(/^https?:\\/\\//, \"\")\n        .replace(/\\/$/, \"\")\n        .replace(/^www\\./, \"\");\n      break;\n\n    case \"instagram\":\n      href = `https://instagram.com/${raw}`;\n      break;\n\n    case \"twitter\":\n      href = `https://twitter.com/${raw}`;\n      display = `@${raw}`;\n      break;\n\n    default:\n  }\n\n  return (\n    <div>\n      <Image\n        src={require(`../assets/social_${linkType}.svg`)}\n        style={{ width: \"1.2rem\", paddingRight: \".35rem\" }}\n      />\n      <a style={{ fontSize: \"0.85rem\" }} href={href}>\n        {display}\n      </a>\n    </div>\n  );\n};\n\nconst Lightbox = (props) => {\n  return (\n    <Modal\n      show={props.show}\n      dialogClassName=\"camp-lightbox \"\n      onHide={() => props.setShow(false)}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>{props.name}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body style={{ padding: 0 }}>\n        <Image src={props.image} fluid></Image>\n      </Modal.Body>\n      {props.about && props.about.length > 0 && (\n        <Modal.Footer style={{ justifyContent: \"flex-start\" }}>\n          {props.about}\n        </Modal.Footer>\n      )}\n    </Modal>\n  );\n};\n\nconst CampCard = (props) => {\n  const [showLightbox, setShowLightbox] = useState(false);\n  const o = props.o;\n\n  return (\n    <>\n      <Lightbox\n        show={showLightbox}\n        setShow={setShowLightbox}\n        image={`${s3images}/${o.fullSizeImage}`}\n        name={o.name}\n        about={o.about}\n        centered\n      ></Lightbox>\n      <Card bg=\"light\" border={props.ismine ? \"success\" : \"light\"}>\n        {o.thumbnail && (\n          <Card.Img\n            role=\"button\"\n            variant=\"top\"\n            src={`${s3images}/${o.thumbnail}`}\n            onClick={() => {\n              setShowLightbox(!!o.fullSizeImage); // only show lightbox if fullSizeImage present\n            }}\n          />\n        )}\n        <Card.Header as=\"h5\">\n          <span style={{ fontSize: \"1.2rem\", fontWeight: \"bolder\" }}>\n            {o.name}\n          </span>\n        </Card.Header>\n        <Card.Body>\n          <Card.Subtitle className=\"mb-2 text-muted\">\n            {o.identifies}\n            {o.location && o.location.string && <div>{o.location.string}</div>}\n          </Card.Subtitle>\n          <Card.Text>\n            {o.about} <JoinButton o={o} />\n          </Card.Text>\n\n          {[\"url\", \"facebook\", \"email\", \"instagram\", \"twitter\"].map((s) => {\n            return <DisplaySocialLink key={s} linkType={s} raw={o[s]} />;\n          })}\n          <h4 style={{ marginTop: \"0.7rem\" }}>\n            {o.offerShowers && (\n              <OverlayTrigger\n                key=\"shower\"\n                placement=\"bottom\"\n                overlay={\n                  <Tooltip id=\"tooltip-shower\">Camp provides showers</Tooltip>\n                }\n              >\n                <span role=\"img\" aria-label=\"Camp provides showers\">\n                  🚿{\" \"}\n                </span>\n              </OverlayTrigger>\n            )}\n            {o.offerWater && (\n              <OverlayTrigger\n                key=\"water\"\n                placement=\"bottom\"\n                overlay={\n                  <Tooltip id=\"tooltip-water\">Camp provides water</Tooltip>\n                }\n              >\n                <span role=\"img\" aria-label=\"Camp provides water\">\n                  🚰{\" \"}\n                </span>\n              </OverlayTrigger>\n            )}\n            {o.offerMeals && (\n              <OverlayTrigger\n                key=\"meal\"\n                placement=\"bottom\"\n                overlay={\n                  <Tooltip id=\"tooltip-meal\">\n                    Camp provides some or all meals\n                  </Tooltip>\n                }\n              >\n                <span role=\"img\" aria-label=\"Camp provides some or all meals\">\n                  🍽{\" \"}\n                </span>\n              </OverlayTrigger>\n            )}\n            {o.campFee && (\n              <OverlayTrigger\n                key=\"fee\"\n                placement=\"bottom\"\n                overlay={\n                  <Tooltip id=\"tooltip-fee\">\n                    There is a fee to camp with us\n                  </Tooltip>\n                }\n              >\n                <span role=\"img\" aria-label=\"There is a fee to camp with us\">\n                  💲{\" \"}\n                </span>\n              </OverlayTrigger>\n            )}\n            {o.virginsWelcome && (\n              <OverlayTrigger\n                key=\"virgins\"\n                placement=\"bottom\"\n                overlay={\n                  <Tooltip id=\"tooltip-virgins\">\n                    Burning Man first-timers welcome\n                  </Tooltip>\n                }\n              >\n                <span role=\"img\" aria-label=\"Burning Man first-timers welcome\">\n                  🦄{\" \"}\n                </span>\n              </OverlayTrigger>\n            )}\n          </h4>\n        </Card.Body>\n        {props.ismine && (\n          <Card.Footer>\n            This is your camp - you can&nbsp;\n            <Link to={`/edit/${o.year}/?camp=${encodeURIComponent(o.name)}`}>\n              edit it!\n            </Link>\n          </Card.Footer>\n        )}\n        {!props.ismine && props.isadmin && (\n          <Card.Footer>\n            <Link to={`/edit/${o.year}/?camp=${encodeURIComponent(o.name)}`}>\n              Edit\n            </Link>\n            {o.contact && o.contact.email && o.contact.name && (\n              <div style={{ fontSize: \"0.8rem\" }}>\n                Submitted by {o.contact.name}{\" \"}\n                <a href={`mailto:${o.contact.email}`}>{o.contact.email}</a>\n              </div>\n            )}\n          </Card.Footer>\n        )}\n      </Card>\n    </>\n  );\n};\n\nexport default CampCard;\n","import React from \"react\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport CardColumns from \"react-bootstrap/CardColumns\";\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Card from \"react-bootstrap/Card\";\n\nimport CampCard from \"./CampCard.js\";\n\nimport { Link } from \"react-router-dom\";\nimport { defaultYear, api } from \"../definitions.js\";\n\nimport axios from \"axios\";\nconst CancelToken = axios.CancelToken;\n\nconst campIdentifications = [...require(\"shared\").campIdentifications];\n\nconst neighborhood = (camp) => {\n  const s430 = [\"4:00\", \"4:15\", \"4:30\", \"4:45\", \"5:00\", \"5:15\", \"5:30\"];\n  const s730 = [\"6:30\", \"6:45\", \"7:00\", \"7:15\", \"7:30\", \"7:45\", \"8:00\"];\n\n  if (\n    s430.includes(camp.location.frontage) ||\n    s430.includes(camp.location.intersection)\n  )\n    return \"East Village\";\n  if (\n    s730.includes(camp.location.frontage) ||\n    s730.includes(camp.location.intersection)\n  )\n    return \"West Village\";\n\n  return \"Elsewhere\";\n};\n\nexport default class DirectoryBody extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filter: \"all\",\n      search: this.props.search ? this.props.search : \"\",\n      data: null,\n      cancelFn: null,\n    };\n  }\n\n  async fetchData(clearFirst) {\n    if (this.state.cancelFn) {\n      this.state.cancelFn();\n      this.setState({ cancelFn: null });\n    }\n\n    let year;\n    if (this.props.year >= 1996 && this.props.year < 3000) {\n      year = this.props.year;\n    } else if (defaultYear === 2020) {\n      year = 2019; // there was no burning man in 2020 :(\n    } else {\n      year = defaultYear;\n    }\n\n    if (clearFirst) {\n      this.setState({ data: null });\n    }\n    try {\n      const response = await axios.get(`${api}/camps/${year}`, {\n        auth: { username: this.props.userData.idToken, password: \"\" },\n        cancelToken: new CancelToken((c) => {\n          this.setState({ cancelFn: c });\n        }),\n      });\n      this.setState({ cancelFn: null, data: response.data });\n    } catch (e) {\n      if (!axios.isCancel(e)) {\n        console.error(e);\n      }\n    }\n  }\n\n  async componentDidMount() {\n    await this.fetchData(false);\n  }\n\n  async componentDidUpdate(prevProps) {\n    // if user turns out to be admin, reload because the admin gets to see\n    // more stuff\n\n    if (this.props.userData.isAdmin && !prevProps.userData.isAdmin) {\n      await this.fetchData(false);\n    } else if (this.props.year !== prevProps.year) {\n      this.setState({ search: \"\" });\n      await this.fetchData(true);\n    }\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ search: event.target.value });\n  };\n\n  render() {\n    let filterButtonString = this.state.filter;\n    if (this.state.filter === \"all\") {\n      filterButtonString = \"Filter\";\n    }\n\n    return (\n      <div>\n        <Container fluid className=\"pl-4 pr-4\">\n          <Row className=\"pb-4\">\n            <Col>\n              <h2>Camp Directory {this.props.year}</h2>\n            </Col>\n            <Col md=\"auto\">\n              <Form inline={1}>\n                {/* this fake submit button is here to block Enter \"submitting\" the search (which does nothing) */}\n                <Button\n                  type=\"submit\"\n                  disabled\n                  style={{ display: \"none\" }}\n                  aria-hidden=\"true\"\n                />\n                <DropdownButton\n                  as={ButtonGroup}\n                  id=\"dropdown-basic-button\"\n                  title={filterButtonString}\n                  size=\"sm\"\n                  style={{ marginRight: \"2rem\" }}\n                >\n                  {campIdentifications.map((s) => (\n                    <Dropdown.Item\n                      key={s}\n                      onClick={() => this.setState({ filter: s })}\n                    >\n                      {s}\n                    </Dropdown.Item>\n                  ))}\n                  <Dropdown.Item\n                    onClick={() => this.setState({ filter: \"East Village\" })}\n                  >\n                    East Village\n                  </Dropdown.Item>\n                  <Dropdown.Item\n                    onClick={() => this.setState({ filter: \"West Village\" })}\n                  >\n                    West Village\n                  </Dropdown.Item>\n                  <Dropdown.Item\n                    onClick={() =>\n                      this.setState({ filter: \"Seeking new members\" })\n                    }\n                  >\n                    Seeking new members\n                  </Dropdown.Item>\n                </DropdownButton>\n                {this.state.filter !== \"all\" && (\n                  <Button\n                    size=\"sm\"\n                    variant=\"outline-primary\"\n                    style={{ marginRight: \"2rem\" }}\n                    onClick={() => this.setState({ filter: \"all\" })}\n                  >\n                    Clear Filter\n                  </Button>\n                )}\n                <InputGroup size=\"sm\" style={{ width: \"20rem\" }}>\n                  <FormControl\n                    autoFocus\n                    placeholder=\"Search\"\n                    aria-label=\"Search\"\n                    onChange={this.onSearchChange}\n                    value={this.state.search}\n                  />\n                  {this.state.search.length > 0 && (\n                    <InputGroup.Append>\n                      <Button\n                        variant=\"outline-secondary\"\n                        onClick={() => this.setState({ search: \"\" })}\n                      >\n                        Clear\n                      </Button>\n                    </InputGroup.Append>\n                  )}\n                </InputGroup>\n              </Form>\n            </Col>\n          </Row>\n          {!this.state.data ? (\n            <Row>\n              <Col>\n                <div className=\"spinner-border\" role=\"status\">\n                  <span className=\"sr-only\">Loading...</span>\n                </div>\n              </Col>\n            </Row>\n          ) : (\n            <>\n              <Row>\n                <Col>\n                  <CardColumns>\n                    {this.state.data\n                      .filter(\n                        (onecamp) =>\n                          (this.state.filter === \"all\" ||\n                            (this.state.filter === \"Seeking new members\" &&\n                              onecamp.joinOpen) ||\n                            (this.state.filter === \"West Village\" &&\n                              neighborhood(onecamp) === this.state.filter) ||\n                            (this.state.filter === \"East Village\" &&\n                              neighborhood(onecamp) === this.state.filter) ||\n                            this.state.filter === onecamp.identifies) &&\n                          (this.state.search.length === 0 ||\n                            (this.state.search.length === 1 &&\n                              onecamp.name\n                                .toLowerCase()\n                                .startsWith(this.state.search.toLowerCase())) ||\n                            (this.state.search.length > 1 &&\n                              onecamp.name\n                                .toLowerCase()\n                                .includes(this.state.search.toLowerCase())))\n                      )\n                      .map((onecamp) => (\n                        <CampCard\n                          o={onecamp}\n                          key={onecamp.year + \" \" + onecamp.name}\n                          ismine={\n                            (this.props.userData.hashEmail &&\n                              this.props.userData.hashEmail ===\n                                onecamp.hashEmail) ||\n                            (this.props.userData.email &&\n                              onecamp.contact &&\n                              onecamp.contact.email &&\n                              this.props.userData.email ===\n                                onecamp.contact.email)\n                          }\n                          isadmin={this.props.userData.isAdmin}\n                        />\n                      ))}\n                    {this.props.search ? (\n                      <Card bg=\"success\" text=\"white\">\n                        <Card.Header>\n                          <strong>Thank you!</strong>\n                        </Card.Header>\n                        <Card.Body>\n                          <p>\n                            <strong>{this.props.search}</strong> will now appear\n                            in the Queer Burners Directory for {this.props.year}\n                            .\n                          </p>\n                          <p>\n                            You can edit this listing, change the picture, and\n                            add more information at any time. Just come back to\n                            queerburnersdirectory.com and log on again using\n                            your Google account.\n                          </p>\n                          <p>\n                            This directory is a service of{\" \"}\n                            <a\n                              href=\"http://queerburners.com/\"\n                              className=\"text-reset\"\n                              style={{ textDecoration: \"underline\" }}\n                            >\n                              Queer Burners\n                            </a>\n                            , an online community of LGBTQ+ burners from around\n                            the world. Check out our website for galleries, the\n                            history of LGBTQ+ participants at Burning Man, and\n                            more. We also have{\" \"}\n                            <a\n                              href=\"https://www.facebook.com/groups/queer.burners/\"\n                              className=\"text-reset\"\n                              style={{ textDecoration: \"underline\" }}\n                            >\n                              an active Facebook group\n                            </a>{\" \"}\n                            to keep in touch and hope you will join!\n                          </p>\n                          <Button\n                            onClick={() => {\n                              this.setState({ search: \"\" });\n                            }}\n                          >\n                            Ok\n                          </Button>\n                        </Card.Body>\n                      </Card>\n                    ) : (\n                      <Card bg=\"success\" text=\"white\">\n                        <Card.Header>\n                          <strong>Don't see your camp here?</strong>\n                        </Card.Header>\n                        <Card.Body>\n                          <p>\n                            Please{\" \"}\n                            <Link\n                              to=\"/submit\"\n                              className=\"text-reset\"\n                              style={{ textDecoration: \"underline\" }}\n                            >\n                              submit it\n                            </Link>\n                            !\n                          </p>\n                        </Card.Body>\n                      </Card>\n                    )}\n                  </CardColumns>\n                </Col>\n              </Row>\n            </>\n          )}\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { useLocation } from \"react-router-dom\";\n\nimport axios from \"axios\";\nimport Container from \"react-bootstrap/Container\";\nimport Image from \"react-bootstrap/Image\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport { googleClientId, oauthEndpoint, api } from \"../definitions.js\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nimport { hashEmail } from \"shared\";\n\nexport const LogonLink = () => {\n  return <a href={LogonLinkAddress()}>Login</a>;\n};\n\nconst LogonLinkAddress = () => {\n  let location = useLocation();\n\n  let link =\n    oauthEndpoint +\n    \"?state=\" +\n    encodeURIComponent(location.pathname + location.search) +\n    \"&client_id=\" +\n    googleClientId +\n    \"&redirect_uri=\" +\n    encodeURIComponent(window.location.origin + \"/postauthenticate\") +\n    \"&response_type=code\" +\n    \"&scope=openid%20email%20profile\" +\n    \"&access_type=offline\" +\n    \"&include_granted_scopes=true\";\n\n  if (localStorage.getItem(\"oauthPrompt\")) {\n    link += `&prompt=${localStorage.getItem(\"oauthPrompt\")}`;\n  }\n\n  return link;\n};\n\nexport const Authenticate = (props) => {\n  useEffect(() => {\n    if (!props.userData.isLoggedOn) {\n      // user isn't logged on. Do they want to be?\n\n      let tmpUserData = JSON.parse(localStorage.getItem(\"userData\"));\n      if (tmpUserData && tmpUserData.isLoggedOn) {\n        // yes. Is their token still good?\n        if (new Date(tmpUserData.expires).valueOf() > new Date().valueOf()) {\n          // Yes! Log them on\n          props.OnUserDataChange(tmpUserData);\n        } else {\n          // No! This would be a good time to redirect through google TODO!\n        }\n      }\n    }\n  }, [props.userData, props]);\n\n  // every 10 seconds, we check if the user login token is expiring.\n  // If so, we kinda force a logout, so the UI doesn't appear to show\n  // you that you are logged on.\n  useEffect(() => {\n    let interval = setInterval(() => {\n      if (\n        props.userData.isLoggedOn &&\n        new Date(props.userData.expires).valueOf() - 10000 <\n          new Date().valueOf()\n      ) {\n        // user token expired.\n        localStorage.removeItem(\"userData\");\n        props.OnUserDataChange({ isLoggedOn: false });\n      }\n    }, 10000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  });\n\n  if (props.userData && props.userData.isLoggedOn) {\n    return (\n      <>\n        <Image\n          roundedCircle\n          src={props.userData.imageUrl}\n          className=\"GoogleUserPicture\"\n        ></Image>\n        <NavDropdown alignRight title={props.userData.fullName}>\n          <NavDropdown.Item>\n            Logged on as {props.userData.email}\n            {props.userData.isAdmin && <em> (admin)</em>}\n          </NavDropdown.Item>\n          <LinkContainer to=\"/editPosts\">\n            <NavDropdown.Item>Edit Posts</NavDropdown.Item>\n          </LinkContainer>\n          <NavDropdown.Item\n            onClick={() => {\n              localStorage.removeItem(\"userData\");\n              localStorage.setItem(\"oauthPrompt\", \"consent\");\n              props.OnUserDataChange({ isLoggedOn: false });\n            }}\n          >\n            Logout\n          </NavDropdown.Item>\n        </NavDropdown>\n      </>\n    );\n  } else {\n    return <Nav.Link href={LogonLinkAddress()}>Login</Nav.Link>;\n  }\n};\n\nexport const PostAuthenticate = (props) => {\n  const [status, setStatus] = useState(\"Logging you on...\");\n  const [isLoggedOn, setIsLoggedOn] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await axios.post(`${api}/googleidtokenfromauthcode`, {\n          code: new URLSearchParams(props.location.search).get(\"code\"),\n          redirect_uri: `${window.location.origin}/postauthenticate`,\n        });\n\n        setStatus(\"Success\");\n        setIsLoggedOn(true);\n\n        const userData = {\n          isLoggedOn: true,\n          idToken: result.data.idToken,\n          fullName: result.data.name,\n          email: result.data.email,\n          hashEmail: hashEmail(result.data.email),\n          isAdmin: result.data.isadmin,\n          imageUrl: result.data.imageUrl,\n          expires: new Date(\n            new Date().valueOf() + 1000 * Number(result.data.duration)\n          ),\n        };\n\n        localStorage.setItem(\"userData\", JSON.stringify(userData));\n        localStorage.removeItem(\"oauthPrompt\");\n        props.OnUserDataChange(userData);\n      } catch (err) {\n        console.error(\"Error logging on\");\n        console.error(err.response.data);\n        setStatus(\"An error occurred logging you on.\");\n      }\n    };\n\n    fetchData();\n  }, [props.location.search, props]);\n\n  const queryParams = new URLSearchParams(props.location.search);\n\n  if (isLoggedOn) {\n    return <Redirect to={queryParams.get(\"state\")} />;\n  } else {\n    return (\n      <Container>\n        <Row>\n          <Col>\n            <Spinner animation=\"border\" role=\"status\">\n              <span className=\"sr-only\"></span>\n            </Spinner>\n            <h2>{status}</h2>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n};\n","import React, { useState, useRef, useEffect } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport axios from \"axios\";\nimport Image from \"react-bootstrap/Image\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport Button from \"react-bootstrap/Button\";\n\nexport const ImageUploader = ({\n  thumbnail,\n  onChange,\n  s3images,\n  api,\n  onSubmitInProgress,\n}) => {\n  const [objectUrl, setObjectUrl] = useState(\"\"); // URL of the image\n  const [userFilename, setUserFilename] = useState(\"\"); // what the user thinks the file is called\n  const [uploadProgress, setUploadProgress] = useState(null);\n  const [needsScroll, setNeedsScroll] = useState(false);\n  const imageEl = useRef(null);\n\n  useEffect(() => {\n    if (thumbnail.length > 0 && objectUrl.length === 0) {\n      setObjectUrl(`${s3images}/${thumbnail}`);\n    }\n  }, [thumbnail, s3images, objectUrl.length]);\n\n  useEffect(() => {\n    if (needsScroll) {\n      setTimeout(() => {\n        imageEl.current.scrollIntoView({\n          block: \"end\",\n          behavior: \"smooth\",\n        });\n      }, 100);\n      setNeedsScroll(false);\n    }\n  }, [needsScroll]);\n\n  const startUpload = async (event) => {\n    if (event.target.files.length === 0) {\n      // no picture.\n      setUserFilename(\"\");\n      return;\n    }\n\n    const actualFile = event.target.files[0];\n\n    let ext = \"\";\n    if ([\"image/jpeg\", \"image/jpg\"].includes(actualFile.type)) {\n      ext = \"jpg\";\n    } else if (actualFile.type === \"image/png\") {\n      ext = \"png\";\n    } else {\n      setObjectUrl(\"\");\n      setUserFilename(\"(file must be PNG or JPG)\");\n      onChange(\"\");\n      return;\n    }\n\n    setUserFilename(actualFile.name);\n\n    try {\n      onSubmitInProgress(true);\n      const uploader = await axios.get(`${api}/camps/pictureuploadurl/${ext}`);\n\n      let image;\n      let reader = new FileReader();\n      reader.onload = async (e) => {\n        image = e.target.result;\n\n        let binary = atob(image.split(\",\")[1]);\n        let array = [];\n        for (var i = 0; i < binary.length; i++) {\n          array.push(binary.charCodeAt(i));\n        }\n        let blobData = new Blob([new Uint8Array(array)], {\n          type: uploader.data.contentType,\n        });\n\n        await axios.put(uploader.data.url, blobData, {\n          headers: {\n            \"Content-Type\": uploader.data.contentType,\n          },\n          onUploadProgress: (pe) => {\n            setUploadProgress(\n              pe.lengthComputable\n                ? Math.floor((pe.loaded * 100) / pe.total)\n                : null\n            );\n          },\n        });\n\n        setObjectUrl(URL.createObjectURL(actualFile));\n        onChange(uploader.data.fileName);\n        setUploadProgress(null);\n        setNeedsScroll(true);\n        onSubmitInProgress(false);\n      };\n\n      reader.readAsDataURL(actualFile);\n    } catch (error) {\n      console.error(error);\n      console.error(error.response.request.response);\n    }\n  };\n\n  return (\n    <>\n      <Form.File\n        name=\"thumbnail\"\n        id=\"thumbnail\"\n        label={userFilename}\n        custom\n        accept=\"image/png|image/jpeg\"\n        onChange={startUpload}\n      />\n      {uploadProgress && (\n        <ProgressBar striped now={uploadProgress}></ProgressBar>\n      )}\n      {objectUrl && (\n        <div ref={imageEl}>\n          <Image src={objectUrl} fluid />\n          <Button\n            variant=\"outline-danger\"\n            onClick={() => {\n              onChange(\"\");\n              setObjectUrl(\"\");\n              setUserFilename(\"\");\n            }}\n          >\n            Delete this picture\n          </Button>\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { useState, useRef, useEffect } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport axios from \"axios\";\nimport Alert from \"react-bootstrap/Alert\";\nimport { Redirect } from \"react-router\";\n\nconst DeleteButton = (props) => {\n  const [show, setShow] = useState(false);\n  const [needsScroll, setNeedsScroll] = useState(false);\n  const [done, setDone] = useState(false);\n  const alertEl = useRef(null);\n\n  useEffect(() => {\n    if (needsScroll) {\n      alertEl.current.scrollIntoView({\n        block: \"end\",\n        behavior: \"smooth\",\n      });\n      setNeedsScroll(false);\n    }\n  }, [needsScroll]);\n\n  if (done) {\n    return <Redirect to={props.redirectOnSuccess}></Redirect>;\n  }\n\n  return (\n    <>\n      <Button\n        variant=\"outline-danger\"\n        onClick={() => {\n          if (!show) setNeedsScroll(true);\n          setShow(!show);\n        }}\n      >\n        Delete\n      </Button>\n      <div ref={alertEl}>\n        <Alert show={show} variant=\"danger\" style={{ marginTop: \"1rem\" }}>\n          <Alert.Heading>{props.message}</Alert.Heading>\n          <p>{props.longMessage}</p>\n          <hr />\n          <div className=\"d-flex justify-content-end\">\n            <Button\n              onClick={async () => {\n                setShow(false);\n                await axios.delete(props.apiToDelete, {\n                  auth: {\n                    username: props.userData.idToken,\n                    password: \"\",\n                  },\n                });\n                setDone(true);\n              }}\n              variant=\"danger\"\n            >\n              Yes, permanently delete it\n            </Button>\n            &nbsp;\n            <Button onClick={() => setShow(false)} variant=\"outline-success\">\n              Cancel\n            </Button>\n          </div>\n        </Alert>\n      </div>\n    </>\n  );\n};\n\nexport default DeleteButton;\n","import React from \"react\";\nimport { Redirect } from \"react-router\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { LogonLink } from \"./Authenticate.js\";\nimport { ImageUploader } from \"./ImageUploader.js\";\nimport DeleteButton from \"./DeleteButton.js\";\n\nimport { defaultYear, api, s3images } from \"../definitions.js\";\nimport { fieldError, emptyCamp } from \"shared\";\n\nimport axios from \"axios\";\n\nconst campIdentifications = [...require(\"shared\").campIdentifications];\nconst streets = [...require(\"shared\").streets];\nconst crossStreets = require(\"shared\").crossStreets;\n\nexport default class SubmitBody extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // The state object is just a standard\n      // camp directory object, which can be submitted to the\n      // API and stored in the database.\n      ...emptyCamp,\n      year: defaultYear === 2020 ? 2021 : defaultYear,\n\n      // state keys starting with '_' are Component state\n      // and form metadata which will never be submitted to the API\n      _validated: false,\n      _error_name: null,\n      _error_about: null,\n      _error_url: null,\n      _error_facebook: null,\n      _error_email: null,\n      _error_twitter: null,\n      _error_instagram: null,\n      _error_joinMessage: null,\n      _error_joinUrl: null,\n      _error_submit: null,\n      _submit_in_progress: false,\n      _submit_successful: false,\n      _ready_to_show_form: false,\n      _submit_disabled: false,\n    };\n  }\n\n  submitHandler = async (event) => {\n    event.preventDefault();\n    this.setState({\n      _validated: true,\n      _error_submit: null,\n      _submit_in_progress: true,\n    });\n\n    let camp = {};\n    for (var key in this.state) {\n      if (!key.startsWith(\"_\")) {\n        camp[key] = this.state[key];\n        if (typeof camp[key] === \"string\") {\n          camp[key] = camp[key].trim();\n        }\n      }\n    }\n\n    var fieldsToValidate = [\n      \"name\",\n      \"about\",\n      \"url\",\n      \"facebook\",\n      \"email\",\n      \"twitter\",\n      \"instagram\",\n    ];\n    if (this.state.joinOpen) {\n      fieldsToValidate.push(\"joinMessage\", \"joinUrl\");\n    }\n\n    for (var x of fieldsToValidate) {\n      if (!this.fieldValidator(x, camp[x])) {\n        this.setState({ _submit_in_progress: false });\n        return null;\n      }\n    }\n\n    try {\n      await axios.post(`${api}/camps`, camp, {\n        auth: {\n          username: this.props.userData.idToken,\n          password: \"\",\n        },\n      });\n      this.setState({ _submit_successful: true, _submit_in_progress: false });\n    } catch (error) {\n      let msg = \"\";\n      if (error.response) {\n        // server returned error\n        msg = `Error ${error.response.status}: ${error.response.data}`;\n      } else if (error.request) {\n        msg = \"Error: Network error (no response received)\";\n      } else {\n        msg = error.message;\n      }\n      console.error(msg);\n      console.error(error);\n      this.setState({ _error_submit: msg, _submit_in_progress: false });\n    }\n  };\n\n  fieldValidator = (key, value) => {\n    const err = fieldError(key, value);\n\n    this.setState({ [\"_error_\" + key]: err });\n    document.getElementById(key).setCustomValidity(err);\n    return err === \"\";\n  };\n\n  changeHandler = (event) => {\n    // if the name of the form control is a single\n    // word like \"identifies\", this does a normal, simple\n    // setState to update the JSON state.\n\n    // if it is composite, like \"location.frontage\", it\n    // only changes location.frontage while preserving\n    // the other sub-fields of location.\n\n    // this allows up to two levels of hierarchy in the\n    // object.\n\n    const splitname = event.target.name.split(\".\");\n    const x = splitname[0];\n    let y;\n    switch (event.target.type) {\n      case \"checkbox\":\n        y = event.target.checked;\n        break;\n      default:\n        y = event.target.value;\n    }\n\n    if (splitname.length === 1) {\n      this.setState((state, props) => {\n        return {\n          [x]: y,\n        };\n      });\n    } else if (splitname.length === 2) {\n      const xx = splitname[1];\n      this.setState((state, props) => {\n        return {\n          [x]: {\n            ...state[x],\n            [xx]: y,\n          },\n        };\n      });\n    }\n\n    // TODO why is this code here? it doesn't do anything... looks like a bug.\n    if (x === \"location\") {\n      if (splitname[1] === \"frontage\") {\n        // constrain intersections to valid cross streets\n      }\n    }\n\n    this.fieldValidator(event.target.name, y);\n  };\n\n  NotLoggedIn() {\n    return (\n      <Container>\n        <Row>\n          <Col>\n            <h2>Submit your camp to the Queer Burners directory!</h2>\n            <p>\n              Welcome! We're building a comprehensive list of queer and ally\n              theme camps that will participate in Burning Man in{\" \"}\n              {this.state.year}.\n            </p>\n\n            <p>\n              To add your theme camp to this directory, please start by logging\n              in using a Google Account.\n            </p>\n            <p>\n              <LogonLink />\n            </p>\n            <p>\n              We will use the email address associated with your Google Account\n              to contact you in case of difficulty, but it won't appear in the\n              directory. Later if you need to make changes or remove your camp's\n              listing, you can do so by logging in again.\n            </p>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n\n  Instructions() {\n    if (this.props.year && this.props.camp) {\n      return (\n        <div>\n          <h2>{this.props.camp.name}</h2>\n          <p>\n            Edit any changes in the information for your camp in{\" \"}\n            {this.props.year} and hit Submit.\n          </p>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <h2>Submit your camp to the Queer Burners directory!</h2>\n          <p>\n            Welcome! We're building a comprehensive list of queer and ally theme\n            camps that will participate in Burning Man in {this.state.year}.\n          </p>\n          <p>\n            To add your theme camp to this directory, please fill out this form.\n          </p>\n        </div>\n      );\n    }\n  }\n\n  async fetchData() {\n    if (!this.props.camp || this.props.camp.length === 0) {\n      return;\n    }\n\n    try {\n      const response = await axios.get(\n        `${api}/camps/${this.props.year}/${encodeURIComponent(\n          this.props.camp\n        )}`,\n        {\n          auth: {\n            username: this.props.userData.idToken,\n            password: \"\",\n          },\n        }\n      );\n      const data = response.data[0];\n\n      this.setState({\n        ...data,\n        originalName: data.name,\n        _ready_to_show_form: true,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (\n      prevProps.userData.isAdmin !== this.props.userData.isAdmin ||\n      prevProps.year !== this.props.year ||\n      prevProps.camp !== this.props.camp\n    )\n      await this.fetchData();\n  }\n\n  async componentDidMount() {\n    if (!this.props.camp || this.props.camp.length === 0) {\n      this.setState({ _ready_to_show_form: true });\n      return;\n    }\n\n    await this.fetchData();\n  }\n\n  render() {\n    if (this.state._submit_successful) {\n      return (\n        <Redirect\n          to={`/year/${this.state.year}?s=${encodeURIComponent(\n            this.state.name\n          )}`}\n        />\n      );\n    } else if (!this.props.userData.isLoggedOn) {\n      return this.NotLoggedIn();\n    } else if (!this.state._ready_to_show_form) {\n      return (\n        <Container>\n          <div className=\"spinner-border\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n        </Container>\n      );\n    } else\n      return (\n        <Form\n          noValidate\n          validated={this.state._validated}\n          onSubmit={this.submitHandler}\n        >\n          <Container fluid=\"lg\" className=\"pl-4 pr-4 pb-4\">\n            <Row>\n              <Col>{this.Instructions()}</Col>\n            </Row>\n            <Row>\n              <Col xs={12} md={8}>\n                <Form.Group controlId=\"name\">\n                  <Form.Label>Camp Name</Form.Label>\n                  <Form.Control\n                    type=\"input\"\n                    placeholder=\"404 Camp Not Found\"\n                    name=\"name\"\n                    value={this.state.name}\n                    onChange={this.changeHandler}\n                  ></Form.Control>\n                  <Form.Control.Feedback type=\"invalid\">\n                    {this.state._error_name}\n                  </Form.Control.Feedback>\n                  <Form.Text className=\"text-muted\">\n                    If your camp is registered with placement, make sure this\n                    name matches exactly.\n                  </Form.Text>\n                </Form.Group>\n              </Col>\n              <Col xs={12} md={4}>\n                <Form.Group controlId=\"identifies\">\n                  <Form.Label>Primary Identification</Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    name=\"identifies\"\n                    value={this.state.identifies}\n                    onChange={this.changeHandler}\n                  >\n                    {campIdentifications.map((s) => (\n                      <option key={s}>{s}</option>\n                    ))}\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n            </Row>\n\n            <Row>\n              <Col>\n                <Form.Group controlId=\"about\">\n                  <Form.Label>About your camp</Form.Label>\n                  <Form.Control\n                    as=\"textarea\"\n                    rows=\"3\"\n                    placeholder=\"Max 255 characters\"\n                    name=\"about\"\n                    onChange={this.changeHandler}\n                    value={this.state.about}\n                  ></Form.Control>\n                  <Form.Control.Feedback type=\"invalid\">\n                    {this.state._error_about}\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Col>\n            </Row>\n\n            <Row>\n              <Col>\n                <Form.Group controlId=\"location.frontage\">\n                  <Form.Label>Frontage</Form.Label>\n                  <Form.Control\n                    name=\"location.frontage\"\n                    as=\"select\"\n                    onChange={this.changeHandler}\n                    value={this.state.location.frontage}\n                  >\n                    {streets.map((s) => (\n                      <option key={s}>{s}</option>\n                    ))}\n                  </Form.Control>\n                  <Form.Text className=\"text-muted\">\n                    The street that your camp faces\n                  </Form.Text>\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group controlId=\"location.intersection\">\n                  <Form.Label>Intersection</Form.Label>\n                  <Form.Control\n                    name=\"location.intersection\"\n                    as=\"select\"\n                    onChange={this.changeHandler}\n                    value={this.state.location.intersection}\n                  >\n                    {crossStreets(this.state.location.frontage).map((s) => (\n                      <option key={s}>{s}</option>\n                    ))}\n                  </Form.Control>\n                  <Form.Text className=\"text-muted\">\n                    The nearest cross-street\n                  </Form.Text>\n                </Form.Group>\n              </Col>\n            </Row>\n\n            <Row>\n              <Col xs={12} md={6}>\n                <Form.Group controlId=\"url\">\n                  <Form.Label>Public web site</Form.Label>\n                  <Form.Control\n                    type=\"input\"\n                    name=\"url\"\n                    value={this.state.url}\n                    placeholder=\"https://www.example.com\"\n                    onChange={this.changeHandler}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {this.state._error_url}\n                  </Form.Control.Feedback>\n                  <Form.Text className=\"text-muted\">\n                    Your camp's public website, if any. Do not use a Facebook\n                    URL here\n                  </Form.Text>\n                </Form.Group>\n              </Col>\n              <Col xs={12} md={6}>\n                <Form.Group controlId=\"facebook\">\n                  <Form.Label>Facebook</Form.Label>\n                  <Form.Control\n                    type=\"input\"\n                    name=\"facebook\"\n                    value={this.state.facebook}\n                    placeholder=\"https://www.facebook.com/campname\"\n                    onChange={this.changeHandler}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {this.state._error_facebook}\n                  </Form.Control.Feedback>\n                  <Form.Text className=\"text-muted\">\n                    Your camp's public Facebook page or group, if any. Provide\n                    the full URL\n                  </Form.Text>\n                </Form.Group>\n              </Col>\n            </Row>\n\n            <Row>\n              <Col xs={12} md={4}>\n                <Form.Group controlId=\"email\">\n                  <Form.Label>Public Email</Form.Label>\n                  <Form.Control\n                    type=\"input\"\n                    name=\"email\"\n                    value={this.state.email}\n                    placeholder=\"info@example.com\"\n                    onChange={this.changeHandler}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {this.state._error_email}\n                  </Form.Control.Feedback>\n                  <Form.Text className=\"text-muted\">\n                    Public email address for inquiries (this will be visible in\n                    the directory to anyone!)\n                  </Form.Text>\n                </Form.Group>\n              </Col>\n              <Col xs={12} md={4}>\n                <Form.Group controlId=\"twitter\">\n                  <Form.Label>Twitter</Form.Label>\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                      <InputGroup.Text>@</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control\n                      type=\"input\"\n                      name=\"twitter\"\n                      value={this.state.twitter}\n                      placeholder=\"example\"\n                      onChange={this.changeHandler}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {this.state._error_twitter}\n                    </Form.Control.Feedback>\n                  </InputGroup>\n                  <Form.Text className=\"text-muted\">\n                    Your Twitter feed, if any\n                  </Form.Text>\n                </Form.Group>\n              </Col>\n              <Col xs={12} md={4}>\n                <Form.Group controlId=\"instagram\">\n                  <Form.Label>Instagram</Form.Label>\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                      <InputGroup.Text>@</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control\n                      type=\"input\"\n                      name=\"instagram\"\n                      value={this.state.instagram}\n                      placeholder=\"example\"\n                      onChange={this.changeHandler}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {this.state._error_instagram}\n                    </Form.Control.Feedback>\n                  </InputGroup>\n                  <Form.Text className=\"text-muted\">\n                    Your Instagram feed, if any\n                  </Form.Text>\n                </Form.Group>\n              </Col>\n            </Row>\n\n            <Row>\n              <Col>\n                <Form.Group controlId=\"thumbnail\">\n                  <Form.Label>Upload a picture of your camp here</Form.Label>\n                  <ImageUploader\n                    thumbnail={this.state.thumbnail}\n                    onChange={(thumbnail) => {\n                      this.setState({ thumbnail: thumbnail });\n                    }}\n                    s3images={s3images}\n                    api={api}\n                    onSubmitInProgress={(inProgress) => {\n                      this.setState({ _submit_disabled: inProgress });\n                    }}\n                  />\n                  <Form.Text className=\"text-muted\">\n                    This picture will appear in the Queer Burners directory.\n                    Submit a picture of your campers, your frontage, or\n                    something else fun, but please keep it SFW!\n                  </Form.Text>\n                </Form.Group>\n              </Col>\n            </Row>\n\n            <Row>\n              <Col>\n                <Form.Group controlId=\"offerMeals\">\n                  <Form.Label>Features</Form.Label>\n                  <Form.Check\n                    type=\"switch\"\n                    name=\"offerMeals\"\n                    checked={this.state.offerMeals}\n                    label=\"Camp provides some or all meals\"\n                    onChange={this.changeHandler}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"offerWater\">\n                  <Form.Check\n                    type=\"switch\"\n                    name=\"offerWater\"\n                    checked={this.state.offerWater}\n                    label=\"Camp provides water\"\n                    onChange={this.changeHandler}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"offerShowers\">\n                  <Form.Check\n                    type=\"switch\"\n                    name=\"offerShowers\"\n                    checked={this.state.offerShowers}\n                    label=\"Camp provides showers\"\n                    onChange={this.changeHandler}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"campFee\">\n                  <Form.Check\n                    type=\"switch\"\n                    name=\"campFee\"\n                    checked={this.state.campFee}\n                    label=\"There is a fee to camp with us\"\n                    onChange={this.changeHandler}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"virginsWelcome\">\n                  <Form.Check\n                    type=\"switch\"\n                    name=\"virginsWelcome\"\n                    checked={this.state.virginsWelcome}\n                    label=\"Burning Man first-timers welcome\"\n                    onChange={this.changeHandler}\n                  />\n                </Form.Group>\n              </Col>\n            </Row>\n\n            <Row>\n              <Col>\n                <Form.Group controlId=\"joinOpen\">\n                  <Form.Label>Are you open to new members?</Form.Label>\n                  <Form.Check\n                    type=\"switch\"\n                    name=\"joinOpen\"\n                    checked={this.state.joinOpen}\n                    label=\"Yes\"\n                    onChange={this.changeHandler}\n                  />\n                </Form.Group>\n                {this.state.joinOpen && (\n                  <div>\n                    <Form.Group controlId=\"joinMessage\">\n                      <Form.Label>Instructions</Form.Label>\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"3\"\n                        name=\"joinMessage\"\n                        value={this.state.joinMessage}\n                        placeholder=\"Max 255 characters\"\n                        onChange={this.changeHandler}\n                      ></Form.Control>\n                      <Form.Control.Feedback type=\"invalid\">\n                        {this.state._error_joinMessage}\n                      </Form.Control.Feedback>\n                      <Form.Text className=\"text-muted\">\n                        Provide brief instructions for people who are interested\n                        in joining your camp. What should they do next?\n                      </Form.Text>\n                    </Form.Group>\n                    <Form.Group controlId=\"joinUrl\">\n                      <Form.Label>URL for application form</Form.Label>\n                      <Form.Control\n                        type=\"input\"\n                        name=\"joinUrl\"\n                        value={this.state.joinUrl}\n                        placeholder=\"https://www.example.com\"\n                        onChange={this.changeHandler}\n                      ></Form.Control>{\" \"}\n                      <Form.Control.Feedback type=\"invalid\">\n                        {this.state._error_joinUrl}\n                      </Form.Control.Feedback>\n                      <Form.Text className=\"text-muted\">\n                        Provide a link to an application form or information\n                        about joining.\n                      </Form.Text>\n                    </Form.Group>\n                  </div>\n                )}\n              </Col>\n            </Row>\n\n            {this.state.contact &&\n              this.state.contact.email &&\n              this.state.contact.name &&\n              this.props.userData.isAdmin && (\n                <Row style={{ border: \"3px solid #f7f7f7\" }}>\n                  <Col xs={12} md={4} style={{ backgroundColor: \"#f7f7f7\" }}>\n                    Administrators Only\n                    <br />\n                    <Form.Text className=\"text-muted\">\n                      You are logged on as an administrator so you can edit who\n                      owns this camp.{\" \"}\n                      <strong>This private info is not shown to users.</strong>\n                    </Form.Text>\n                  </Col>\n                  <Col xs={12} md={4}>\n                    <Form.Group controlId=\"contact.email\">\n                      <Form.Label>Private Email</Form.Label>\n                      <Form.Control\n                        type=\"input\"\n                        placeholder=\"a@example.com\"\n                        name=\"contact.email\"\n                        value={this.state.contact.email}\n                        onChange={this.changeHandler}\n                      ></Form.Control>\n                      <Form.Text className=\"text-muted\">\n                        The private email address of the person who submitted\n                        this camp. This controls who can edit the camp.\n                      </Form.Text>\n                    </Form.Group>\n                  </Col>\n                  <Col xs={12} md={4}>\n                    <Form.Group controlId=\"contact.name\">\n                      <Form.Label>Name</Form.Label>\n                      <Form.Control\n                        type=\"input\"\n                        placeholder=\"Pat Burner\"\n                        name=\"contact.name\"\n                        value={this.state.contact.name}\n                        onChange={this.changeHandler}\n                      ></Form.Control>\n                      <Form.Text className=\"text-muted\">\n                        The name of the person who submitted this camp.\n                      </Form.Text>\n                    </Form.Group>\n                  </Col>\n                </Row>\n              )}\n\n            <Row>\n              <Col>\n                {this.state._error_submit && (\n                  <Alert\n                    variant=\"danger\"\n                    dismissible\n                    onClose={() => this.setState({ _error_submit: null })}\n                  >\n                    <Alert.Heading>Error</Alert.Heading>\n                    <p>\n                      An error occurred and your camp information was not\n                      submitted.\n                    </p>\n                    <p>\n                      <strong>{this.state._error_submit}</strong>\n                    </p>\n                  </Alert>\n                )}\n\n                {this.state._submit_in_progress ? (\n                  <Spinner animation=\"border\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                  </Spinner>\n                ) : (\n                  <span>\n                    <Button\n                      variant=\"primary\"\n                      type=\"submit\"\n                      disabled={this.state._submit_disabled}\n                    >\n                      Submit\n                    </Button>{\" \"}\n                    {this.props.year && this.props.camp && (\n                      <DeleteButton\n                        message=\"Delete this camp?\"\n                        longMessage=\"Are you sure you want to permanently delete this theme camp from the Queer Burners directory?\"\n                        apiToDelete={`${api}/camps/${\n                          this.state.year\n                        }/${encodeURIComponent(this.state.name)}`}\n                        redirectOnSuccess={`/year/${this.state.year}`}\n                        userData={this.props.userData}\n                      />\n                    )}\n                  </span>\n                )}\n              </Col>\n            </Row>\n          </Container>\n        </Form>\n      );\n  }\n}\n","import React from \"react\";\nimport banner from \"../assets/header.jpg\";\nimport { Authenticate } from \"./Authenticate.js\";\n\nimport { Link } from \"react-router-dom\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nexport const Header = (props) => {\n  return (\n    <div>\n      <Navbar collapseOnSelect expand=\"md\" bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"/\">Queer Burners</Navbar.Brand>\n\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <LinkContainer to=\"/directory\">\n              <Nav.Link>Directory</Nav.Link>\n            </LinkContainer>\n            <LinkContainer to=\"/submit\">\n              <Nav.Link>Submit</Nav.Link>\n            </LinkContainer>\n            <NavDropdown title=\"Other Years\" id=\"collasible-nav-dropdown\">\n              <LinkContainer to=\"/year/2019\">\n                <NavDropdown.Item>2019 Metamorphoses</NavDropdown.Item>\n              </LinkContainer>\n              <LinkContainer to=\"/year/2020\">\n                <NavDropdown.Item>2020 The Multiverse</NavDropdown.Item>\n              </LinkContainer>\n              <LinkContainer to=\"/year/2021\">\n                <NavDropdown.Item>2021</NavDropdown.Item>\n              </LinkContainer>\n            </NavDropdown>\n          </Nav>\n          <Nav>\n            <Authenticate\n              userData={props.userData}\n              OnUserDataChange={props.OnUserDataChange}\n            />\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      <Link to=\"/\">\n        <img\n          className=\"img-fluid w-100\"\n          src={banner}\n          alt=\"Queer Burners\"\n          style={{ marginBottom: \"2rem\" }}\n        />\n      </Link>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"react-router-dom\";\n\nexport const Footer = (props) => {\n  return (\n    <Container\n      fluid\n      className=\"p-3 p-md-4 qb-footer\"\n      style={{ marginTop: \"2rem\" }}\n    >\n      <Row>\n        <Col>\n          <p>\n            A project of Queer Burners: an online community of LGBTQ+ burners\n            from around the world.\n          </p>\n          <ul>\n            <li>\n              <Link to=\"/history\">History</Link>\n            </li>\n            <li>\n              <Link to=\"/go-to-burning-man\">Going to Burning Man</Link>\n            </li>\n\n            <li>\n              <Link to=\"/FAQ\">FAQ</Link>\n            </li>\n            <li>\n              <Link to=\"/Privacy\">Privacy Policy</Link>\n            </li>\n\n            <li>\n              <a href=\"mailto:info@queerburners.com\">info@queerburners.com</a>\n            </li>\n          </ul>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Footer;\n","import { useEffect } from \"react\";\n\nimport { withRouter } from \"react-router-dom\";\n\nfunction ScrollToTop({ history }) {\n  useEffect(() => {\n    const unlisten = history.listen(() => {\n      window.scrollTo(0, 0);\n    });\n    return () => {\n      unlisten();\n    };\n  }, [history]);\n  return null;\n}\n\nexport default withRouter(ScrollToTop);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Table from \"react-bootstrap/Table\";\nimport { Link } from \"react-router-dom\";\n\nimport { api } from \"../definitions.js\";\n\nexport const EditPosts = (props) => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(`${api}/posts`);\n\n      const sortedPosts = result.data.sort((a, b) =>\n        a.path.localeCompare(b.path)\n      );\n\n      setData(sortedPosts);\n    };\n\n    if (props.userData && props.userData.isAdmin) {\n      fetchData();\n    }\n  }, [props.userData]);\n\n  if (!props.userData || !props.userData.isAdmin) {\n    return (\n      <Container className=\"qb-textpage\">\n        <Row>\n          <Col>\n            <h3>\n              You have to be logged on to see this page.\n              <br />\n              <br />\n              <br />\n            </h3>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n\n  return (\n    <Container className=\"qb-textpage\">\n      <Row>\n        <Col>\n          <h1>Edit Posts</h1>\n\n          {data.length === 0 ? (\n            <div className=\"spinner-border\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </div>\n          ) : (\n            <>\n              <Table bordered hover>\n                <thead>\n                  <tr>\n                    <th>Path</th>\n                    <th>Description</th>\n                    <th>&nbsp;</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {data.map((i) => (\n                    <tr key={i.path}>\n                      <td>/{i.path}</td>\n                      <td>{i.description}</td>\n                      <td>\n                        <Link to={i.path}>View</Link>\n                        &nbsp;|&nbsp;\n                        <Link to={`/editPost/${i.path}`}>Edit</Link>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n              <p>\n                <Link to={\"/newPost\"}>+ Add a new post</Link>\n              </p>\n            </>\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default EditPosts;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Button from \"react-bootstrap/Button\";\nimport Alert from \"react-bootstrap/Alert\";\n\nimport { Editor } from \"@tinymce/tinymce-react\";\nimport DeleteButton from \"./DeleteButton.js\";\n\nimport { api, apiKeyTinyMCE } from \"../definitions.js\";\n\nexport const EditPost = (props) => {\n  const [path, setPath] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [post, setPost] = useState(\"\");\n  const [locked, setLocked] = useState(true);\n  const [loaded, setLoaded] = useState(false); /// haha locked and loaded haha\n  const [pathError, setPathError] = useState(null);\n  const [formValidated, setFormValidated] = useState(false);\n  const [saveInProgress, setSaveInProgress] = useState(false);\n  const [saveError, setSaveError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await axios(`${api}/posts/${props.post}`);\n        setPath(result.data.path);\n        setDescription(result.data.description);\n        setPost(result.data.post);\n        setLocked(result.data.locked);\n        setLoaded(true);\n      } catch (e) {\n        setDescription(\"404 not found\");\n      }\n    };\n\n    if (props.post) {\n      fetchData();\n    } else {\n      setLoaded(true);\n      setLocked(false);\n      setPost(\"<h1>Type your title here</h1><p>Type your post here</p>\");\n    }\n  }, [props.post]);\n\n  const changeHandler = (event) => {\n    switch (event.target.name) {\n      case \"path\":\n        setPath(event.target.value.trim());\n        break;\n\n      case \"description\":\n        setDescription(event.target.value);\n        break;\n\n      case \"post\":\n        setPost(event.target.value);\n        break;\n\n      default:\n        break;\n    }\n\n    setFormValidated(false);\n  };\n\n  const postChangeHandler = (event) => {\n    setPost(event.target.getContent());\n    setFormValidated(false);\n  };\n\n  const saveHandler = async (event) => {\n    setFormValidated(true);\n\n    setPathError(\"\");\n    document.getElementById(\"path\").setCustomValidity(\"\");\n\n    const tester2 = /\\/\\//;\n\n    if (path.startsWith(\"/\") || path.endsWith(\"/\") || tester2.test(path)) {\n      setPathError(\n        \"Path should not start or end with /, or contain more than one / in a row\"\n      );\n      document.getElementById(\"path\").setCustomValidity(\"NOT\");\n      return;\n    }\n\n    if (path === \"\") {\n      setPathError(\"Specify the URL path where this post can be seen\");\n      document.getElementById(\"path\").setCustomValidity(\"NOT\");\n      return;\n    }\n\n    const tester = /^[a-zA-Z0-9\\-_/]+$/;\n\n    if (!tester.test(path)) {\n      setPathError(\n        \"This would not be a valid URL. Please stick to letters, numbers, -, _, and /\"\n      );\n      document.getElementById(\"path\").setCustomValidity(\"NOT\");\n      return;\n    }\n\n    const postToSubmit = {\n      path: path,\n      description: description,\n      post: post,\n      locked: locked,\n    };\n\n    setSaveInProgress(true);\n\n    try {\n      await axios.post(`${api}/posts`, postToSubmit, {\n        auth: {\n          username: props.userData.idToken,\n          password: \"\",\n        },\n      });\n      setLocked(true);\n      setSaveInProgress(false);\n    } catch (error) {\n      let msg = \"\";\n      if (error.response) {\n        // server returned error\n        msg = `Error ${error.response.status}: ${error.response.data}`;\n      } else if (error.request) {\n        msg = \"Error: Network error (no response received)\";\n      } else {\n        msg = error.message;\n      }\n      console.error(msg);\n      console.error(error);\n      setSaveInProgress(false);\n      setSaveError(msg);\n    }\n  };\n\n  const imageUploadHandler = async (blobInfo, success, failure, progress) => {\n    const localFilename = blobInfo.filename();\n    const re = /(?:\\.([^.]+))?$/; // https://stackoverflow.com/q/680929\n    const localExtension = re.exec(localFilename)[1];\n\n    console.log(blobInfo);\n    console.log(localFilename);\n    console.log(localExtension);\n\n    if (![\"png\", \"jpg\", \"jpeg\"].includes(localExtension)) {\n      console.log(\"Only JPG or PNG files can be uploaded\");\n      failure(\"Only JPG or PNG files can be uploaded\");\n      return;\n    }\n\n    progress(1);\n    const uploader = await axios.get(\n      `${api}/camps/pictureuploadurl/${localExtension}`\n    );\n    console.log(uploader);\n    progress(10);\n\n    await axios.put(uploader.data.url, blobInfo.blob(), {\n      headers: {\n        \"Content-Type\": uploader.data.contentType,\n      },\n      onUploadProgress: (pe) => {\n        progress(\n          pe.lengthComputable ? Math.floor((pe.loaded * 100) / pe.total) : 50\n        );\n      },\n    });\n\n    success(\n      `https://s3.us-east-2.amazonaws.com/queerburnersdirectory.com-images/${uploader.data.fileName}`\n    );\n  };\n\n  if (!props.userData || !props.userData.isAdmin) {\n    return (\n      <Container className=\"qb-textpage\">\n        <Row>\n          <Col>\n            <h3>\n              You have to be logged on to see this page.\n              <br />\n              <br />\n              <br />\n            </h3>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n\n  return (\n    <Container className=\"qb-textpage\">\n      <Row>\n        <Col>\n          {!loaded ? (\n            <div className=\"spinner-border\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </div>\n          ) : (\n            <div>\n              <h1>Editing one post</h1>\n              <Form noValidate validated={formValidated}>\n                <Form.Group controlId=\"path\">\n                  <Form.Label>Path</Form.Label>\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                      <InputGroup.Text>\n                        queerburnersdirectory.com/\n                      </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control\n                      type=\"input\"\n                      placeholder=\"\"\n                      name=\"path\"\n                      value={path}\n                      readOnly={locked || props.post}\n                      onChange={changeHandler}\n                    ></Form.Control>{\" \"}\n                    <Form.Control.Feedback type=\"invalid\">\n                      {pathError}\n                    </Form.Control.Feedback>\n                  </InputGroup>\n\n                  <Form.Text className=\"text-muted\">\n                    The URL where this post appears. Can be multi/part, but can\n                    never be changed (to change it, create a new post and copy\n                    everything over)\n                  </Form.Text>\n                </Form.Group>\n                <Form.Group controlId=\"description\">\n                  <Form.Label>Description</Form.Label>\n\n                  <Form.Control\n                    type=\"description\"\n                    placeholder=\"Describe this post briefly\"\n                    name=\"description\"\n                    value={description}\n                    onChange={changeHandler}\n                  ></Form.Control>\n                  <Form.Text className=\"text-muted\">\n                    Description for admins, not shown to public\n                  </Form.Text>\n                </Form.Group>\n                <Editor\n                  initialValue={post}\n                  apiKey={apiKeyTinyMCE}\n                  init={{\n                    height: 500,\n                    menubar: false,\n                    images_upload_handler: imageUploadHandler,\n                    image_caption: true,\n                    // image_class_list: [\n                    //   { title: \"None\", value: \"\" },\n                    //   { title: \"Dog\", value: \"dog\" },\n                    //   { title: \"Cat\", value: \"cat\" },\n                    // ],\n                    plugins: [\n                      \"advlist autolink emoticons lists link image\",\n                      \"charmap print preview anchor help\",\n                      \"searchreplace visualblocks code\",\n                      \"insertdatetime media table paste wordcount\",\n                    ],\n                    block_formats:\n                      \"Paragraph=p; Title=h1; Header 2=h2; Header 3=h3\",\n                    toolbar:\n                      \"undo redo removeformat | formatselect | bold italic | alignleft aligncenter alignright | image link | blockquote bullist numlist outdent indent | charmap emoticons | code help\",\n                  }}\n                  onChange={postChangeHandler}\n                />\n                <br />\n                {saveError && (\n                  <Alert\n                    variant=\"danger\"\n                    dismissible\n                    onClose={() => setSaveError(null)}\n                  >\n                    <Alert.Heading>Error</Alert.Heading>\n                    <p>An error occurred and this blog post was not saved.</p>\n                    <p>\n                      <strong>{saveError}</strong>\n                    </p>\n                  </Alert>\n                )}\n                <Button\n                  variant=\"primary\"\n                  onClick={saveHandler}\n                  disabled={saveInProgress}\n                >\n                  Save\n                </Button>\n                {saveInProgress && <span>Saving...</span>}{\" \"}\n                {!locked && props.post && (\n                  <DeleteButton\n                    message=\"Delete this post?\"\n                    longMessage=\"Are you sure you want to permanently delete this entire post from the site?\"\n                    apiToDelete={`${api}/posts/${path}`}\n                    redirectOnSuccess=\"/editPosts\"\n                    userData={props.userData}\n                  />\n                )}\n              </Form>\n            </div>\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default EditPost;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"react-router-dom\";\n\nimport { api } from \"../definitions.js\";\n\nexport const ViewPost = (props) => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await axios(`${api}/posts/${props.post}`);\n        setData(result.data);\n      } catch (e) {\n        setData({ post: \"<h1>404 Not Found</h1>\" });\n      }\n    };\n\n    fetchData();\n  }, [props.post]);\n\n  return (\n    <Container className=\"qb-textpage\">\n      {props.userData.isAdmin && (\n        <Row>\n          <Col>\n            <div className=\"alert alert-info\" role=\"alert\">\n              You are an admin, so you can{\" \"}\n              <Link to={`/editPost/${props.post}`}>edit this post</Link>.\n            </div>\n          </Col>\n        </Row>\n      )}\n      <Row>\n        <Col>\n          {data.length === 0 ? (\n            <div className=\"spinner-border\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </div>\n          ) : (\n            <div dangerouslySetInnerHTML={{ __html: data.post }} />\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default ViewPost;\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport DirectoryBody from \"./components/DirectoryBody.js\";\nimport SubmitBody from \"./components/SubmitBody.js\";\nimport Header from \"./components/Header.js\";\nimport Footer from \"./components/Footer.js\";\nimport { PostAuthenticate } from \"./components/Authenticate.js\";\nimport ScrollToTop from \"./components/ScrollToTop.js\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./custom.scss\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Route, Switch } from \"react-router-dom\";\nimport EditPosts from \"./components/EditPosts\";\nimport EditPost from \"./components/EditPost\";\nimport ViewPost from \"./components/ViewPost\";\n\nconst TopLevelComponent = (props) => {\n  const [userData, setUserData] = useState({ isLoggedOn: false });\n\n  return (\n    <Router>\n      <ScrollToTop />\n      <Header\n        userData={userData}\n        OnUserDataChange={(newUserData) => {\n          setUserData(newUserData);\n        }}\n      />\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={(props) => (\n            <ViewPost userData={userData} post=\"greetersStation\" />\n          )}\n        />\n        <Route\n          path=\"/submit\"\n          render={(props) => (\n            <SubmitBody userData={userData} year={null} camp={null} />\n          )}\n        />\n        <Route\n          path=\"/year/:year\"\n          render={(props) => (\n            <DirectoryBody\n              {...props}\n              year={props.match.params.year}\n              search={new URLSearchParams(props.location.search).get(\"s\")}\n              userData={userData}\n            />\n          )}\n        />\n        <Route\n          path=\"/directory\"\n          render={(props) => (\n            <DirectoryBody {...props} year=\"\" userData={userData} />\n          )}\n        />\n        <Route\n          path=\"/editPosts\"\n          render={(props) => <EditPosts userData={userData} />}\n        />\n        <Route\n          path=\"/editPost/:post+\"\n          render={(props) => (\n            <EditPost userData={userData} post={props.match.params.post} />\n          )}\n        />\n        <Route\n          path=\"/newPost\"\n          render={(props) => <EditPost userData={userData} post={null} />}\n        />\n\n        <Route\n          path=\"/edit/:year\"\n          render={(props) => {\n            return (\n              <SubmitBody\n                userData={userData}\n                year={props.match.params.year}\n                camp={new URLSearchParams(props.location.search).get(\"camp\")}\n              />\n            );\n          }}\n        />\n        <Route\n          path=\"/postauthenticate\"\n          render={(props) => (\n            <PostAuthenticate\n              {...props}\n              OnUserDataChange={(newUserData) => {\n                setUserData(newUserData);\n              }}\n            />\n          )}\n        />\n\n        <Route\n          path=\"/:post+\"\n          render={(props) => (\n            <ViewPost userData={userData} post={props.match.params.post} />\n          )}\n        />\n      </Switch>\n      <Footer />\n    </Router>\n  );\n};\n\nReactDOM.render(<TopLevelComponent />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const crypto = require(\"crypto\");\n\nconst fieldError = (key, value) => {\n  let err = \"\";\n  switch (key) {\n    case \"year\":\n      if (typeof value !== \"number\") {\n        err = \"Year is not a number\";\n      } else if (value < 2018 || value > 2199) {\n        err = \"Year out of range\";\n      }\n      break;\n\n    case \"name\":\n      if (typeof value !== \"string\") {\n        err = \"Camp name is not a string\";\n      } else if (value.length === 0) {\n        err = \"Camp name is required\";\n      } else if (value.length > 50) {\n        err = `Camp name is too long by ${value.length - 50}`;\n      }\n      break;\n\n    case \"identifies\":\n      if (typeof value !== \"string\") {\n        err = \"identifies is not a string\";\n      } else if (value === \"\") {\n        err = \"identifies is required (try LGBTQ)\";\n      } else if (!campIdentifications.includes(value)) {\n        err = `${value} is not a valid camp identity (try LGBTQ)`;\n      }\n      break;\n\n    case \"about\":\n      if (typeof value !== \"string\") {\n        err = \"about is not a string\";\n      } else if (value.length > 255) {\n        err = `about is too long by ${value.length - 255}`;\n      }\n      break;\n\n    case \"location\":\n      if (\n        typeof value !== \"object\" ||\n        !value.frontage ||\n        !value.intersection ||\n        typeof value.frontage !== \"string\" ||\n        typeof value.intersection !== \"string\"\n      ) {\n        err =\n          \"type error - location should be an object with frontage and intersection strings\";\n      }\n      break;\n\n    case \"url\":\n      if (typeof value !== \"string\") {\n        err = \"url is not a string\";\n      } else if (value === \"\") {\n        err = \"\";\n      } else if (value.length > 128) {\n        err = `url is too long by ${value.length - 128}`;\n      } else if (!validateURL(value)) {\n        err = \"invalid url\";\n      } else if (isFacebookURL(value)) {\n        err = \"use the Facebook field for a Facebook page\";\n      }\n      break;\n\n    case \"facebook\":\n      if (typeof value !== \"string\") {\n        err = \"facebook is not a string\";\n      } else if (value === \"\") {\n        err = \"\";\n      } else if (value.length > 128) {\n        err = `facebook is too long by ${value.length - 128}`;\n      } else if (!validateURL(value)) {\n        err = \"invalid facebook url\";\n      } else if (!isFacebookURL(value)) {\n        err = `${value} is not a Facebook page/group`;\n      }\n      break;\n\n    case \"email\":\n      if (typeof value !== \"string\") {\n        err = \"email is not a string\";\n      } else if (value.length > 256) {\n        err = `email is too long by ${value.length - 256}`;\n      } else if (value.length > 0 && !validateEmail(value)) {\n        err = `'${value}' is not a valid email address`;\n      }\n      break;\n\n    case \"twitter\":\n      if (typeof value !== \"string\") {\n        err = \"twitter is not a string\";\n      } else if (value.length > 15) {\n        err = `twitter is too long by ${value.length - 15}`;\n      } else if (!/^[a-z0-9_]*$/i.test(value)) {\n        err = \"invalid twitter name\";\n      }\n      break;\n\n    case \"instagram\":\n      if (typeof value !== \"string\") {\n        err = \"instagram is not a string\";\n      } else if (value.length > 30) {\n        err = `instagram is too long by ${value.length - 30}`;\n      } else if (!/^[a-z0-9._]*$/i.test(value)) {\n        err = \"invalid instagram handle\";\n      }\n      break;\n\n    case \"joinMessage\":\n      if (typeof value !== \"string\") {\n        err = \"Joining information (joinMessage) is not a string\";\n      } else if (value.length > 255) {\n        err = `Joining information is too long by ${value.length - 255}`;\n      }\n      break;\n\n    case \"joinUrl\":\n      if (typeof value !== \"string\") {\n        err = \"Joining URL (joinUrl) is not a string\";\n      } else if (value === \"\") {\n        err = \"\";\n      } else if (value.length > 128) {\n        err = `Joining URL is too long by ${value.length - 128}`;\n      } else if (!validateURL(value)) {\n        err = \"invalid URL for joining\";\n      }\n      break;\n\n    default:\n  }\n\n  return err;\n};\n\nconst campErrors = (camp) => {\n  let errors = [];\n\n  [\n    \"year\",\n    \"name\",\n    \"identifies\",\n    \"about\",\n    \"location\",\n    \"url\",\n    \"facebook\",\n    \"email\",\n    \"twitter\",\n    \"instagram\",\n  ].map((f) => {\n    let err = fieldError(f, camp[f]);\n    if (err !== \"\") {\n      errors.push({\n        field: f,\n        err: err,\n      });\n    }\n  });\n\n  return errors;\n};\n\nconst tester = /^[-!#$%&'*+\\/0-9=?A-Z^_a-z`{|}~](\\.?[-!#$%&'*+\\/0-9=?A-Z^_a-z`{|}~])*@[a-zA-Z0-9](-*\\.?[a-zA-Z0-9])*\\.[a-zA-Z](-?[a-zA-Z0-9])+$/;\n// Thanks to:\n// http://fightingforalostcause.net/misc/2006/compare-email-regex.php\n// http://thedailywtf.com/Articles/Validating_Email_Addresses.aspx\n// http://stackoverflow.com/questions/201323/what-is-the-best-regular-expression-for-validating-email-addresses/201378#201378\nconst validateEmail = (email) => {\n  if (!email) return false;\n\n  if (email.length > 256) return false;\n\n  if (!tester.test(email)) return false;\n\n  // Further checking of some things regex can't handle\n  const [account, address] = email.split(\"@\");\n  if (account.length > 64) return false;\n\n  const domainParts = address.split(\".\");\n  if (\n    domainParts.some(function (part) {\n      return part.length > 63;\n    })\n  )\n    return false;\n\n  return true;\n};\n\nconst validateURL = (s) => {\n  let url;\n\n  try {\n    // TODO This is error on lambda because URL is unrecognized.\n    // No idea how we got this far tho\n    url = new URL(s);\n  } catch (_) {\n    return false;\n  }\n\n  return url.protocol === \"http:\" || url.protocol === \"https:\";\n};\n\nconst isFacebookURL = (s) => {\n  let url;\n\n  try {\n    url = new URL(s);\n  } catch (_) {\n    return false;\n  }\n\n  return [\"facebook.com\", \"www.facebook.com\", \"m.facebook.com\"].includes(\n    url.hostname\n  );\n};\n\n//\n// Encode a little bit of Burning Man cartography\n// If this function is confusing to you, look at a map of Black Rock City\n//\nconst crossStreets = (frontage) => {\n  if (frontage === streets[0] /* unknown */) {\n    return [streets[0]];\n  }\n  if (frontage.includes(\":\")) {\n    return streets.filter((s) => s === \"Esplanade\" || s.length === 1);\n  } else {\n    return streets.filter((s) => s.includes(\":\"));\n  }\n};\n\nconst locationToString = (frontage, intersection) => {\n  if (frontage === streets[0]) {\n    return streets[0];\n  } else if (frontage === \"Rod's Road\" || frontage === \"Center Camp Plaza\") {\n    // yeah. This is placement's convention because those circular streets\n    // don't really have intersections\n    return `${frontage} @ ${intersection}`;\n  } else {\n    return `${frontage} & ${intersection}`;\n  }\n};\n\nconst campIdentifications = [\n  \"LGBTQ\",\n  \"Lesbian / Female Identified\",\n  \"Gay / Male Identified\",\n  \"Trans / GNC / Non-binary\",\n  \"Ally Camp\",\n];\n\nconst streets = [\n  \"Unknown\",\n  \"Esplanade\",\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n  \"G\",\n  \"H\",\n  \"I\",\n  \"J\",\n  \"K\",\n  \"L\",\n  \"M\",\n  \"Rod's Road\",\n  \"Center Camp Plaza\",\n  \"2:00\",\n  \"2:15\",\n  \"2:30\",\n  \"2:45\",\n  \"3:00\",\n  \"3:15\",\n  \"3:30\",\n  \"3:45\",\n  \"4:00\",\n  \"4:15\",\n  \"4:30\",\n  \"4:45\",\n  \"5:00\",\n  \"5:15\",\n  \"5:30\",\n  \"5:45\",\n  \"6:00\",\n  \"6:15\",\n  \"6:30\",\n  \"6:45\",\n  \"7:00\",\n  \"7:15\",\n  \"7:30\",\n  \"7:45\",\n  \"8:00\",\n  \"8:15\",\n  \"8:30\",\n  \"8:45\",\n  \"9:00\",\n  \"9:15\",\n  \"9:30\",\n  \"9:45\",\n  \"10:00\",\n];\n\nconst emptyCamp = {\n  name: \"\",\n  year: null,\n  identifies: campIdentifications[0],\n  about: \"\",\n  location: {\n    frontage: streets[0],\n    intersection: streets[0],\n  },\n  url: \"\",\n  facebook: \"\",\n  email: \"\",\n  twitter: \"\",\n  instagram: \"\",\n  thumbnail: \"\",\n  joinOpen: false,\n  joinMessage: \"\",\n  joinUrl: \"\",\n  offerMeals: false,\n  offerWater: false,\n  offerShowers: false,\n  campFee: false,\n  virginsWelcome: false,\n};\n\nconst hashEmail = (email) => {\n  if (email.length === 0) {\n    return \"\";\n  }\n  const hash = crypto.createHash(\"sha256\");\n  hash.update(email);\n  return hash.digest(\"base64\");\n};\n\nmodule.exports = {\n  fieldError: fieldError,\n  campErrors: campErrors,\n  campIdentifications: campIdentifications,\n  streets: streets,\n  crossStreets: crossStreets,\n  locationToString: locationToString,\n  hashEmail: hashEmail,\n  emptyCamp: emptyCamp,\n};\n"],"sourceRoot":""}